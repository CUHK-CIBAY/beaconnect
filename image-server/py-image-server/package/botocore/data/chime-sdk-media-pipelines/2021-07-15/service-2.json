{
  "documentation": "<p>The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines and capture audio, video, events, and data messages from Amazon Chime SDK meetings. For more information about media pipleines, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amzon Chime SDK media pipelines</a>. </p>",
  "metadata": {
    "apiVersion": "2021-07-15",
    "endpointPrefix": "media-pipelines-chime",
    "protocol": "rest-json",
    "serviceFullName": "Amazon Chime SDK Media Pipelines",
    "serviceId": "Chime SDK Media Pipelines",
    "signatureVersion": "v4",
    "signingName": "chime",
    "uid": "chime-sdk-media-pipelines-2021-07-15"
  },
  "operations": {
    "CreateMediaCapturePipeline": {
      "documentation": "<p>Creates a media capture pipeline.</p>",
      "errors": [
        { "shape": "BadRequestException" },
        { "shape": "ForbiddenException" },
        { "shape": "UnauthorizedClientException" },
        { "shape": "ThrottledClientException" },
        { "shape": "ResourceLimitExceededException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "ServiceFailureException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sdk-media-capture-pipelines",
        "responseCode": 201
      },
      "input": { "shape": "CreateMediaCapturePipelineRequest" },
      "name": "CreateMediaCapturePipeline",
      "output": { "shape": "CreateMediaCapturePipelineResponse" }
    },
    "DeleteMediaCapturePipeline": {
      "documentation": "<p>Deletes the media capture pipeline.</p>",
      "errors": [
        { "shape": "BadRequestException" },
        { "shape": "ForbiddenException" },
        { "shape": "ThrottledClientException" },
        { "shape": "NotFoundException" },
        { "shape": "UnauthorizedClientException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "ServiceFailureException" }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/sdk-media-capture-pipelines/{mediaPipelineId}",
        "responseCode": 204
      },
      "input": { "shape": "DeleteMediaCapturePipelineRequest" },
      "name": "DeleteMediaCapturePipeline"
    },
    "GetMediaCapturePipeline": {
      "documentation": "<p>Gets an existing media capture pipeline.</p>",
      "errors": [
        { "shape": "BadRequestException" },
        { "shape": "ForbiddenException" },
        { "shape": "UnauthorizedClientException" },
        { "shape": "ThrottledClientException" },
        { "shape": "NotFoundException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "ServiceFailureException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sdk-media-capture-pipelines/{mediaPipelineId}",
        "responseCode": 200
      },
      "input": { "shape": "GetMediaCapturePipelineRequest" },
      "name": "GetMediaCapturePipeline",
      "output": { "shape": "GetMediaCapturePipelineResponse" }
    },
    "ListMediaCapturePipelines": {
      "documentation": "<p>Returns a list of media capture pipelines.</p>",
      "errors": [
        { "shape": "BadRequestException" },
        { "shape": "ForbiddenException" },
        { "shape": "UnauthorizedClientException" },
        { "shape": "ThrottledClientException" },
        { "shape": "ResourceLimitExceededException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "ServiceFailureException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sdk-media-capture-pipelines",
        "responseCode": 200
      },
      "input": { "shape": "ListMediaCapturePipelinesRequest" },
      "name": "ListMediaCapturePipelines",
      "output": { "shape": "ListMediaCapturePipelinesResponse" }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags applied to an Amazon Chime SDK media capture pipeline.</p>",
      "errors": [
        { "shape": "NotFoundException" },
        { "shape": "BadRequestException" },
        { "shape": "ForbiddenException" },
        { "shape": "UnauthorizedClientException" },
        { "shape": "ThrottledClientException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "ServiceFailureException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags",
        "responseCode": 200
      },
      "input": { "shape": "ListTagsForResourceRequest" },
      "name": "ListTagsForResource",
      "output": { "shape": "ListTagsForResourceResponse" }
    },
    "TagResource": {
      "documentation": "<p>Applies the specified tags to the specified Amazon Chime SDK media capture pipeline.</p>",
      "errors": [
        { "shape": "NotFoundException" },
        { "shape": "BadRequestException" },
        { "shape": "ForbiddenException" },
        { "shape": "UnauthorizedClientException" },
        { "shape": "ThrottledClientException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "ServiceFailureException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags?operation=tag-resource",
        "responseCode": 204
      },
      "input": { "shape": "TagResourceRequest" },
      "name": "TagResource",
      "output": { "shape": "TagResourceResponse" }
    },
    "UntagResource": {
      "documentation": "<p>Removes the specified tags from the specified Amazon Chime SDK media capture pipeline.</p>",
      "errors": [
        { "shape": "NotFoundException" },
        { "shape": "BadRequestException" },
        { "shape": "ForbiddenException" },
        { "shape": "UnauthorizedClientException" },
        { "shape": "ThrottledClientException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "ServiceFailureException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags?operation=untag-resource",
        "responseCode": 204
      },
      "input": { "shape": "UntagResourceRequest" },
      "name": "UntagResource",
      "output": { "shape": "UntagResourceResponse" }
    }
  },
  "shapes": {
    "AmazonResourceName": {
      "max": 1011,
      "min": 1,
      "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
      "type": "string"
    },
    "Arn": {
      "max": 1024,
      "min": 1,
      "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
      "sensitive": true,
      "type": "string"
    },
    "ArtifactsConfiguration": {
      "documentation": "<p>The configuration for the artifacts.</p>",
      "members": {
        "Audio": {
          "documentation": "<p>The configuration for the audio artifacts.</p>",
          "shape": "AudioArtifactsConfiguration"
        },
        "Content": {
          "documentation": "<p>The configuration for the content artifacts.</p>",
          "shape": "ContentArtifactsConfiguration"
        },
        "Video": {
          "documentation": "<p>The configuration for the video artifacts.</p>",
          "shape": "VideoArtifactsConfiguration"
        }
      },
      "required": ["Audio", "Video", "Content"],
      "type": "structure"
    },
    "ArtifactsState": {
      "enum": ["Enabled", "Disabled"],
      "type": "string"
    },
    "AttendeeIdList": {
      "member": { "shape": "GuidString" },
      "min": 1,
      "type": "list"
    },
    "AudioArtifactsConfiguration": {
      "documentation": "<p>The audio artifact configuration object.</p>",
      "members": {
        "MuxType": {
          "documentation": "<p>The MUX type of the audio artifact configuration object.</p>",
          "shape": "AudioMuxType"
        }
      },
      "required": ["MuxType"],
      "type": "structure"
    },
    "AudioMuxType": {
      "enum": ["AudioOnly", "AudioWithActiveSpeakerVideo"],
      "type": "string"
    },
    "BadRequestException": {
      "documentation": "<p>The input parameters don't match the service's restrictions.</p>",
      "error": { "httpStatusCode": 400 },
      "exception": true,
      "members": {
        "Code": { "shape": "ErrorCode" },
        "Message": { "shape": "String" },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ChimeSdkMeetingConfiguration": {
      "documentation": "<p>The configuration object of the Amazon Chime SDK meeting for a specified media capture pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>",
      "members": {
        "ArtifactsConfiguration": {
          "documentation": "<p>The configuration for the artifacts in an Amazon Chime SDK meeting.</p>",
          "shape": "ArtifactsConfiguration"
        },
        "SourceConfiguration": {
          "documentation": "<p>The source configuration for a specified media capture pipline.</p>",
          "shape": "SourceConfiguration"
        }
      },
      "type": "structure"
    },
    "ClientRequestToken": {
      "max": 64,
      "min": 2,
      "pattern": "[-_a-zA-Z0-9]*",
      "sensitive": true,
      "type": "string"
    },
    "ContentArtifactsConfiguration": {
      "documentation": "<p>The content artifact object.</p>",
      "members": {
        "MuxType": {
          "documentation": "<p>The MUX type of the artifact configuration.</p>",
          "shape": "ContentMuxType"
        },
        "State": {
          "documentation": "<p>Indicates whether the content artifact is enabled or disabled.</p>",
          "shape": "ArtifactsState"
        }
      },
      "required": ["State"],
      "type": "structure"
    },
    "ContentMuxType": {
      "enum": ["ContentOnly"],
      "type": "string"
    },
    "CreateMediaCapturePipelineRequest": {
      "members": {
        "ChimeSdkMeetingConfiguration": {
          "documentation": "<p>The configuration for a specified media capture pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>",
          "shape": "ChimeSdkMeetingConfiguration"
        },
        "ClientRequestToken": {
          "documentation": "<p>The token assigned to the client making the pipeline request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "SinkArn": {
          "documentation": "<p>The ARN of the sink type.</p>",
          "shape": "Arn"
        },
        "SinkType": {
          "documentation": "<p>Destination type to which the media artifacts are saved. You must use an S3 bucket. </p>",
          "shape": "MediaPipelineSinkType"
        },
        "SourceArn": {
          "documentation": "<p>ARN of the source from which the media artifacts are captured.</p>",
          "shape": "Arn"
        },
        "SourceType": {
          "documentation": "<p>Source type from which the media artifacts are captured. A Chime SDK Meeting is the only supported source.</p>",
          "shape": "MediaPipelineSourceType"
        },
        "Tags": {
          "documentation": "<p>The list of tags.</p>",
          "shape": "TagList"
        }
      },
      "required": ["SourceType", "SourceArn", "SinkType", "SinkArn"],
      "type": "structure"
    },
    "CreateMediaCapturePipelineResponse": {
      "members": {
        "MediaCapturePipeline": {
          "documentation": "<p>A media capture pipeline object, the ID, source type, source ARN, sink type, and sink ARN of a media capture pipeline object.</p>",
          "shape": "MediaCapturePipeline"
        }
      },
      "type": "structure"
    },
    "DeleteMediaCapturePipelineRequest": {
      "members": {
        "MediaPipelineId": {
          "documentation": "<p>The ID of the media capture pipeline being deleted. </p>",
          "location": "uri",
          "locationName": "mediaPipelineId",
          "shape": "GuidString"
        }
      },
      "required": ["MediaPipelineId"],
      "type": "structure"
    },
    "ErrorCode": {
      "enum": [
        "BadRequest",
        "Forbidden",
        "NotFound",
        "ResourceLimitExceeded",
        "ServiceFailure",
        "ServiceUnavailable",
        "Throttling"
      ],
      "type": "string"
    },
    "ExternalUserIdList": {
      "member": { "shape": "ExternalUserIdType" },
      "min": 1,
      "type": "list"
    },
    "ExternalUserIdType": {
      "max": 64,
      "min": 2,
      "sensitive": true,
      "type": "string"
    },
    "ForbiddenException": {
      "documentation": "<p>The client is permanently forbidden from making the request.</p>",
      "error": { "httpStatusCode": 403 },
      "exception": true,
      "members": {
        "Code": { "shape": "ErrorCode" },
        "Message": { "shape": "String" },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetMediaCapturePipelineRequest": {
      "members": {
        "MediaPipelineId": {
          "documentation": "<p>The ID of the pipeline that you want to get.</p>",
          "location": "uri",
          "locationName": "mediaPipelineId",
          "shape": "GuidString"
        }
      },
      "required": ["MediaPipelineId"],
      "type": "structure"
    },
    "GetMediaCapturePipelineResponse": {
      "members": {
        "MediaCapturePipeline": {
          "documentation": "<p>The media capture pipeline object.</p>",
          "shape": "MediaCapturePipeline"
        }
      },
      "type": "structure"
    },
    "GuidString": {
      "max": 36,
      "min": 36,
      "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
      "type": "string"
    },
    "Iso8601Timestamp": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "ListMediaCapturePipelinesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return in a single call. Valid Range: 1 - 99.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "ResultMax"
        },
        "NextToken": {
          "documentation": "<p>The token used to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMediaCapturePipelinesResponse": {
      "members": {
        "MediaCapturePipelines": {
          "documentation": "<p>The media capture pipeline objects in the list.</p>",
          "shape": "MediaCapturePipelineSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token used to retrieve the next page of results. </p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The resource ARN.</p>",
          "location": "querystring",
          "locationName": "arn",
          "shape": "AmazonResourceName"
        }
      },
      "required": ["ResourceARN"],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>The tag key-value pairs.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "MediaCapturePipeline": {
      "documentation": "<p>A media capture pipeline object consisting of an ID, source type, source ARN, a sink type, a sink ARN, and a configuration object.</p>",
      "members": {
        "ChimeSdkMeetingConfiguration": {
          "documentation": "<p>The configuration for a specified media capture pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>",
          "shape": "ChimeSdkMeetingConfiguration"
        },
        "CreatedTimestamp": {
          "documentation": "<p>The time at which the capture pipeline was created, in ISO 8601 format.</p>",
          "shape": "Iso8601Timestamp"
        },
        "MediaPipelineArn": {
          "documentation": "<p>The ARN of a media capture pipeline.</p>",
          "shape": "AmazonResourceName"
        },
        "MediaPipelineId": {
          "documentation": "<p>The ID of a media capture pipeline.</p>",
          "shape": "GuidString"
        },
        "SinkArn": {
          "documentation": "<p>ARN of the destination to which the media artifacts are saved.</p>",
          "shape": "Arn"
        },
        "SinkType": {
          "documentation": "<p>Destination type to which the media artifacts are saved. You must use an S3 Bucket.</p>",
          "shape": "MediaPipelineSinkType"
        },
        "SourceArn": {
          "documentation": "<p>ARN of the source from which the media artifacts are saved.</p>",
          "shape": "Arn"
        },
        "SourceType": {
          "documentation": "<p>Source type from which media artifacts are saved. You must use <code>ChimeMeeting</code>.</p>",
          "shape": "MediaPipelineSourceType"
        },
        "Status": {
          "documentation": "<p>The status of the media capture pipeline.</p>",
          "shape": "MediaPipelineStatus"
        },
        "UpdatedTimestamp": {
          "documentation": "<p>The time at which the capture pipeline was updated, in ISO 8601 format.</p>",
          "shape": "Iso8601Timestamp"
        }
      },
      "type": "structure"
    },
    "MediaCapturePipelineSummary": {
      "documentation": "<p>A summary of a media capture pipeline.</p>",
      "members": {
        "MediaPipelineArn": {
          "documentation": "<p>The ARN of a media capture pipeline.</p>",
          "shape": "AmazonResourceName"
        },
        "MediaPipelineId": {
          "documentation": "<p>The ID of a media capture pipeline.</p>",
          "shape": "GuidString"
        }
      },
      "type": "structure"
    },
    "MediaCapturePipelineSummaryList": {
      "member": { "shape": "MediaCapturePipelineSummary" },
      "type": "list"
    },
    "MediaPipelineSinkType": {
      "enum": ["S3Bucket"],
      "type": "string"
    },
    "MediaPipelineSourceType": {
      "enum": ["ChimeSdkMeeting"],
      "type": "string"
    },
    "MediaPipelineStatus": {
      "enum": ["Initializing", "InProgress", "Failed", "Stopping", "Stopped"],
      "type": "string"
    },
    "NotFoundException": {
      "documentation": "<p>One or more of the resources in the request does not exist in the system.</p>",
      "error": { "httpStatusCode": 404 },
      "exception": true,
      "members": {
        "Code": { "shape": "ErrorCode" },
        "Message": { "shape": "String" },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResourceLimitExceededException": {
      "documentation": "<p>The request exceeds the resource limit.</p>",
      "error": { "httpStatusCode": 400 },
      "exception": true,
      "members": {
        "Code": { "shape": "ErrorCode" },
        "Message": { "shape": "String" },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResultMax": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "SelectedVideoStreams": {
      "documentation": "<p>The video streams to capture for a specified media capture pipeline. The total number of video streams can't exceed 25.</p>",
      "members": {
        "AttendeeIds": {
          "documentation": "<p>The attendee IDs of the streams selected for a media capture pipeline. </p>",
          "shape": "AttendeeIdList"
        },
        "ExternalUserIds": {
          "documentation": "<p>The external user IDs of the streams selected for a media capture pipeline.</p>",
          "shape": "ExternalUserIdList"
        }
      },
      "type": "structure"
    },
    "ServiceFailureException": {
      "documentation": "<p>The service encountered an unexpected error.</p>",
      "error": { "httpStatusCode": 500 },
      "exception": true,
      "fault": true,
      "members": {
        "Code": { "shape": "ErrorCode" },
        "Message": { "shape": "String" },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ServiceUnavailableException": {
      "documentation": "<p>The service is currently unavailable.</p>",
      "error": { "httpStatusCode": 503 },
      "exception": true,
      "fault": true,
      "members": {
        "Code": { "shape": "ErrorCode" },
        "Message": { "shape": "String" },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SourceConfiguration": {
      "documentation": "<p>Source configuration for a specified media capture pipeline.</p>",
      "members": {
        "SelectedVideoStreams": {
          "documentation": "<p>The selected video streams to capture for a specified media capture pipeline. The number of video streams can't exceed 25.</p>",
          "shape": "SelectedVideoStreams"
        }
      },
      "type": "structure"
    },
    "String": {
      "max": 4096,
      "pattern": ".*",
      "type": "string"
    },
    "Tag": {
      "documentation": "<p>Describes a tag applied to a resource.</p>",
      "members": {
        "Key": {
          "documentation": "<p>The key of the tag.</p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p>The value of the tag.</p>",
          "shape": "TagValue"
        }
      },
      "required": ["Key", "Value"],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": { "shape": "TagKey" },
      "min": 1,
      "type": "list"
    },
    "TagList": {
      "max": 50,
      "member": { "shape": "Tag" },
      "min": 1,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The resource ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "Tags": {
          "documentation": "<p>The tag key-value pairs.</p>",
          "shape": "TagList"
        }
      },
      "required": ["ResourceARN", "Tags"],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "ThrottledClientException": {
      "documentation": "<p>The client exceeded its request rate limit.</p>",
      "error": { "httpStatusCode": 429 },
      "exception": true,
      "members": {
        "Code": { "shape": "ErrorCode" },
        "Message": { "shape": "String" },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UnauthorizedClientException": {
      "documentation": "<p>The client is not currently authorized to make the request.</p>",
      "error": { "httpStatusCode": 401 },
      "exception": true,
      "members": {
        "Code": { "shape": "ErrorCode" },
        "Message": { "shape": "String" },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The resource ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "TagKeys": {
          "documentation": "<p>The tag keys.</p>",
          "shape": "TagKeyList"
        }
      },
      "required": ["ResourceARN", "TagKeys"],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "VideoArtifactsConfiguration": {
      "documentation": "<p>The video artifact configuration object.</p>",
      "members": {
        "MuxType": {
          "documentation": "<p>The MUX type of the video artifact configuration object.</p>",
          "shape": "VideoMuxType"
        },
        "State": {
          "documentation": "<p>Indicates whether the video artifact is enabled or disabled.</p>",
          "shape": "ArtifactsState"
        }
      },
      "required": ["State"],
      "type": "structure"
    },
    "VideoMuxType": {
      "enum": ["VideoOnly"],
      "type": "string"
    }
  },
  "version": "2.0"
}
