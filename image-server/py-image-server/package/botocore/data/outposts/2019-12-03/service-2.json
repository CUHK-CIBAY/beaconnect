{
  "documentation": "<p>Amazon Web Services Outposts is a fully managed service that extends Amazon Web Services infrastructure, APIs, and tools to customer premises. By providing local access to Amazon Web Services managed infrastructure, Amazon Web Services Outposts enables customers to build and run applications on premises using the same programming interfaces as in Amazon Web Services Regions, while using local compute and storage resources for lower latency and local data processing needs.</p>",
  "metadata": {
    "apiVersion": "2019-12-03",
    "endpointPrefix": "outposts",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "Outposts",
    "serviceFullName": "AWS Outposts",
    "serviceId": "Outposts",
    "signatureVersion": "v4",
    "signingName": "outposts",
    "uid": "outposts-2019-12-03"
  },
  "operations": {
    "CancelOrder": {
      "documentation": "<p> Cancels an order for an Outpost. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "AccessDeniedException" },
        { "shape": "NotFoundException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/orders/{OrderId}/cancel"
      },
      "input": { "shape": "CancelOrderInput" },
      "name": "CancelOrder",
      "output": { "shape": "CancelOrderOutput" }
    },
    "CreateOrder": {
      "documentation": "<p>Creates an order for an Outpost.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "AccessDeniedException" },
        { "shape": "NotFoundException" },
        { "shape": "InternalServerException" },
        { "shape": "ServiceQuotaExceededException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/orders"
      },
      "input": { "shape": "CreateOrderInput" },
      "name": "CreateOrder",
      "output": { "shape": "CreateOrderOutput" }
    },
    "CreateOutpost": {
      "documentation": "<p>Creates an Outpost.</p> <p>You can specify <code>AvailabilityZone</code> or <code>AvailabilityZoneId</code>.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" },
        { "shape": "ServiceQuotaExceededException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/outposts"
      },
      "input": { "shape": "CreateOutpostInput" },
      "name": "CreateOutpost",
      "output": { "shape": "CreateOutpostOutput" }
    },
    "CreateSite": {
      "documentation": "<p> Creates a site for an Outpost. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" },
        { "shape": "ServiceQuotaExceededException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sites"
      },
      "input": { "shape": "CreateSiteInput" },
      "name": "CreateSite",
      "output": { "shape": "CreateSiteOutput" }
    },
    "DeleteOutpost": {
      "documentation": "<p>Deletes the Outpost.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/outposts/{OutpostId}"
      },
      "input": { "shape": "DeleteOutpostInput" },
      "name": "DeleteOutpost",
      "output": { "shape": "DeleteOutpostOutput" }
    },
    "DeleteSite": {
      "documentation": "<p>Deletes the site.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/sites/{SiteId}"
      },
      "input": { "shape": "DeleteSiteInput" },
      "name": "DeleteSite",
      "output": { "shape": "DeleteSiteOutput" }
    },
    "GetCatalogItem": {
      "documentation": "<p>Gets information about a catalog item.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/catalog/item/{CatalogItemId}"
      },
      "input": { "shape": "GetCatalogItemInput" },
      "name": "GetCatalogItem",
      "output": { "shape": "GetCatalogItemOutput" }
    },
    "GetOrder": {
      "documentation": "<p>Gets an order.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/orders/{OrderId}"
      },
      "input": { "shape": "GetOrderInput" },
      "name": "GetOrder",
      "output": { "shape": "GetOrderOutput" }
    },
    "GetOutpost": {
      "documentation": "<p>Gets information about the specified Outpost.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/outposts/{OutpostId}"
      },
      "input": { "shape": "GetOutpostInput" },
      "name": "GetOutpost",
      "output": { "shape": "GetOutpostOutput" }
    },
    "GetOutpostInstanceTypes": {
      "documentation": "<p>Gets the instance types for the specified Outpost.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/outposts/{OutpostId}/instanceTypes"
      },
      "input": { "shape": "GetOutpostInstanceTypesInput" },
      "name": "GetOutpostInstanceTypes",
      "output": { "shape": "GetOutpostInstanceTypesOutput" }
    },
    "GetSite": {
      "documentation": "<p> Gets information about the specified Outpost site. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sites/{SiteId}"
      },
      "input": { "shape": "GetSiteInput" },
      "name": "GetSite",
      "output": { "shape": "GetSiteOutput" }
    },
    "GetSiteAddress": {
      "documentation": "<p> Gets the site address. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "AccessDeniedException" },
        { "shape": "NotFoundException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sites/{SiteId}/address"
      },
      "input": { "shape": "GetSiteAddressInput" },
      "name": "GetSiteAddress",
      "output": { "shape": "GetSiteAddressOutput" }
    },
    "ListAssets": {
      "documentation": "<p> Lists the hardware assets in an Outpost. If you are using Dedicated Hosts on Amazon Web Services Outposts, you can filter your request by host ID to return a list of hardware assets that allocate resources for Dedicated Hosts. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "AccessDeniedException" },
        { "shape": "NotFoundException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/outposts/{OutpostId}/assets"
      },
      "input": { "shape": "ListAssetsInput" },
      "name": "ListAssets",
      "output": { "shape": "ListAssetsOutput" }
    },
    "ListCatalogItems": {
      "documentation": "<p>Lists the items in the catalog. Add filters to your request to return a more specific list of results. Use filters to match an item class, storage option, or EC2 family. </p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/catalog/items"
      },
      "input": { "shape": "ListCatalogItemsInput" },
      "name": "ListCatalogItems",
      "output": { "shape": "ListCatalogItemsOutput" }
    },
    "ListOrders": {
      "documentation": "<p>Lists the Outpost orders for your Amazon Web Services account. You can filter your request by Outpost to return a more specific list of results. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/list-orders"
      },
      "input": { "shape": "ListOrdersInput" },
      "name": "ListOrders",
      "output": { "shape": "ListOrdersOutput" }
    },
    "ListOutposts": {
      "documentation": "<p>Lists the Outposts for your Amazon Web Services account. Add filters to your request to return a more specific list of results. Use filters to match an Outpost lifecycle status, Availability Zone (<code>us-east-1a</code>), and AZ ID (<code>use1-az1</code>). </p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/outposts"
      },
      "input": { "shape": "ListOutpostsInput" },
      "name": "ListOutposts",
      "output": { "shape": "ListOutpostsOutput" }
    },
    "ListSites": {
      "documentation": "<p>Lists the Outpost sites for your Amazon Web Services account. Add operating address filters to your request to return a more specific list of results. Use filters to match site city, country code, or state/region of the operating address. </p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sites"
      },
      "input": { "shape": "ListSitesInput" },
      "name": "ListSites",
      "output": { "shape": "ListSitesOutput" }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags for the specified resource.</p>",
      "errors": [
        { "shape": "InternalServerException" },
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{ResourceArn}"
      },
      "input": { "shape": "ListTagsForResourceRequest" },
      "name": "ListTagsForResource",
      "output": { "shape": "ListTagsForResourceResponse" }
    },
    "TagResource": {
      "documentation": "<p>Adds tags to the specified resource.</p>",
      "errors": [
        { "shape": "InternalServerException" },
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{ResourceArn}"
      },
      "input": { "shape": "TagResourceRequest" },
      "name": "TagResource",
      "output": { "shape": "TagResourceResponse" }
    },
    "UntagResource": {
      "documentation": "<p>Removes tags from the specified resource.</p>",
      "errors": [
        { "shape": "InternalServerException" },
        { "shape": "ValidationException" },
        { "shape": "NotFoundException" }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{ResourceArn}"
      },
      "input": { "shape": "UntagResourceRequest" },
      "name": "UntagResource",
      "output": { "shape": "UntagResourceResponse" }
    },
    "UpdateOutpost": {
      "documentation": "<p> Updates an Outpost. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/outposts/{OutpostId}"
      },
      "input": { "shape": "UpdateOutpostInput" },
      "name": "UpdateOutpost",
      "output": { "shape": "UpdateOutpostOutput" }
    },
    "UpdateSite": {
      "documentation": "<p> Updates the site. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/sites/{SiteId}"
      },
      "input": { "shape": "UpdateSiteInput" },
      "name": "UpdateSite",
      "output": { "shape": "UpdateSiteOutput" }
    },
    "UpdateSiteAddress": {
      "documentation": "<p> Updates the site address. </p> <p> To update a site address with an order <code>IN_PROGRESS</code>, you must wait for the order to complete or cancel the order. </p> <p>You can update the operating address before you place an order at the site, or after all Outposts that belong to the site have been deactivated. </p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "AccessDeniedException" },
        { "shape": "NotFoundException" },
        { "shape": "ConflictException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/sites/{SiteId}/address"
      },
      "input": { "shape": "UpdateSiteAddressInput" },
      "name": "UpdateSiteAddress",
      "output": { "shape": "UpdateSiteAddressOutput" }
    },
    "UpdateSiteRackPhysicalProperties": {
      "documentation": "<p>Update the physical and logistical details for a rack at a site. For more information about hardware requirements for racks, see <a href=\"https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#checklist\">Network readiness checklist</a> in the Amazon Web Services Outposts User Guide. </p> <p>To update a rack at a site with an order of <code>IN_PROGRESS</code>, you must wait for the order to complete or cancel the order.</p>",
      "errors": [
        { "shape": "ValidationException" },
        { "shape": "ConflictException" },
        { "shape": "NotFoundException" },
        { "shape": "AccessDeniedException" },
        { "shape": "InternalServerException" }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/sites/{SiteId}/rackPhysicalProperties"
      },
      "input": { "shape": "UpdateSiteRackPhysicalPropertiesInput" },
      "name": "UpdateSiteRackPhysicalProperties",
      "output": { "shape": "UpdateSiteRackPhysicalPropertiesOutput" }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have permission to perform this operation.</p>",
      "error": { "httpStatusCode": 403 },
      "exception": true,
      "members": {
        "Message": { "shape": "ErrorMessage" }
      },
      "type": "structure"
    },
    "AccountId": {
      "documentation": "<p>The ID of the Amazon Web Services account.</p>",
      "max": 12,
      "min": 12,
      "pattern": "\\d{12}",
      "type": "string"
    },
    "Address": {
      "documentation": "<p> Information about an address. </p>",
      "members": {
        "AddressLine1": {
          "documentation": "<p>The first line of the address.</p>",
          "shape": "AddressLine1"
        },
        "AddressLine2": {
          "documentation": "<p>The second line of the address.</p>",
          "shape": "AddressLine2"
        },
        "AddressLine3": {
          "documentation": "<p>The third line of the address.</p>",
          "shape": "AddressLine3"
        },
        "City": {
          "documentation": "<p>The city for the address.</p>",
          "shape": "City"
        },
        "ContactName": {
          "documentation": "<p>The name of the contact.</p>",
          "shape": "ContactName"
        },
        "ContactPhoneNumber": {
          "documentation": "<p>The phone number of the contact.</p>",
          "shape": "ContactPhoneNumber"
        },
        "CountryCode": {
          "documentation": "<p>The ISO-3166 two-letter country code for the address.</p>",
          "shape": "CountryCode"
        },
        "DistrictOrCounty": {
          "documentation": "<p>The district or county for the address.</p>",
          "shape": "DistrictOrCounty"
        },
        "Municipality": {
          "documentation": "<p>The municipality for the address.</p>",
          "shape": "Municipality"
        },
        "PostalCode": {
          "documentation": "<p>The postal code for the address.</p>",
          "shape": "PostalCode"
        },
        "StateOrRegion": {
          "documentation": "<p>The state for the address.</p>",
          "shape": "StateOrRegion"
        }
      },
      "required": ["AddressLine1", "City", "StateOrRegion", "PostalCode", "CountryCode"],
      "type": "structure"
    },
    "AddressLine1": {
      "max": 180,
      "min": 1,
      "pattern": "^\\S[\\S ]*$",
      "type": "string"
    },
    "AddressLine2": {
      "max": 60,
      "min": 0,
      "pattern": "^\\S[\\S ]*$",
      "type": "string"
    },
    "AddressLine3": {
      "max": 60,
      "min": 0,
      "pattern": "^\\S[\\S ]*$",
      "type": "string"
    },
    "AddressType": {
      "enum": ["SHIPPING_ADDRESS", "OPERATING_ADDRESS"],
      "type": "string"
    },
    "Arn": {
      "max": 1011,
      "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:([a-z\\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$",
      "type": "string"
    },
    "AssetId": {
      "max": 100,
      "min": 1,
      "pattern": "^(\\w+)$",
      "type": "string"
    },
    "AssetInfo": {
      "documentation": "<p> Information about hardware assets. </p>",
      "members": {
        "AssetId": {
          "documentation": "<p> The ID of the asset. </p>",
          "shape": "AssetId"
        },
        "AssetType": {
          "documentation": "<p> The type of the asset. </p>",
          "shape": "AssetType"
        },
        "ComputeAttributes": {
          "documentation": "<p> Information about compute hardware assets. </p>",
          "shape": "ComputeAttributes"
        },
        "RackId": {
          "documentation": "<p> The rack ID of the asset. </p>",
          "shape": "RackId"
        }
      },
      "type": "structure"
    },
    "AssetListDefinition": {
      "member": { "shape": "AssetInfo" },
      "type": "list"
    },
    "AssetType": {
      "enum": ["COMPUTE"],
      "type": "string"
    },
    "AvailabilityZone": {
      "documentation": "<p>The Availability Zone.</p>",
      "max": 1000,
      "min": 1,
      "pattern": "^([a-zA-Z]+-){1,3}([a-zA-Z]+)?(\\d+[a-zA-Z]?)?$",
      "type": "string"
    },
    "AvailabilityZoneId": {
      "documentation": "<p>The ID of the Availability Zone.</p>",
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z]+\\d-[a-zA-Z]+\\d$",
      "type": "string"
    },
    "AvailabilityZoneIdList": {
      "max": 5,
      "member": { "shape": "AvailabilityZoneId" },
      "min": 1,
      "type": "list"
    },
    "AvailabilityZoneList": {
      "max": 5,
      "member": { "shape": "AvailabilityZone" },
      "min": 1,
      "type": "list"
    },
    "CancelOrderInput": {
      "members": {
        "OrderId": {
          "documentation": "<p> The ID of the order to cancel. </p>",
          "location": "uri",
          "locationName": "OrderId",
          "shape": "OrderId"
        }
      },
      "required": ["OrderId"],
      "type": "structure"
    },
    "CancelOrderOutput": {
      "members": {},
      "type": "structure"
    },
    "CatalogItem": {
      "documentation": "<p> Information about a catalog item. </p>",
      "members": {
        "CatalogItemId": {
          "documentation": "<p> The ID of the catalog item. </p>",
          "shape": "SkuCode"
        },
        "EC2Capacities": {
          "documentation": "<p> Information about the EC2 capacity of an item. </p>",
          "shape": "EC2CapacityListDefinition"
        },
        "ItemStatus": {
          "documentation": "<p> The status of a catalog item. </p>",
          "shape": "CatalogItemStatus"
        },
        "PowerKva": {
          "documentation": "<p> Information about the power draw of an item. </p>",
          "shape": "CatalogItemPowerKva"
        },
        "SupportedStorage": {
          "documentation": "<p> The supported storage options for the catalog item. </p>",
          "shape": "SupportedStorageList"
        },
        "SupportedUplinkGbps": {
          "documentation": "<p> The uplink speed this catalog item requires for the connection to the Region. </p>",
          "shape": "SupportedUplinkGbpsListDefinition"
        },
        "WeightLbs": {
          "documentation": "<p> The weight of the item in pounds. </p>",
          "shape": "CatalogItemWeightLbs"
        }
      },
      "type": "structure"
    },
    "CatalogItemClass": {
      "enum": ["RACK", "SERVER"],
      "type": "string"
    },
    "CatalogItemClassList": {
      "member": { "shape": "CatalogItemClass" },
      "type": "list"
    },
    "CatalogItemListDefinition": {
      "member": { "shape": "CatalogItem" },
      "type": "list"
    },
    "CatalogItemPowerKva": {
      "box": true,
      "type": "float"
    },
    "CatalogItemStatus": {
      "enum": ["AVAILABLE", "DISCONTINUED"],
      "type": "string"
    },
    "CatalogItemWeightLbs": {
      "box": true,
      "type": "integer"
    },
    "City": {
      "max": 50,
      "min": 1,
      "pattern": "^\\S[\\S ]*$",
      "type": "string"
    },
    "CityList": {
      "member": { "shape": "City" },
      "type": "list"
    },
    "ComputeAttributes": {
      "documentation": "<p> Information about compute hardware assets. </p>",
      "members": {
        "HostId": {
          "documentation": "<p> The host ID of any Dedicated Hosts on the asset. </p>",
          "shape": "HostId"
        }
      },
      "type": "structure"
    },
    "ConflictException": {
      "documentation": "<p>Updating or deleting this resource can cause an inconsistent state.</p>",
      "error": { "httpStatusCode": 409 },
      "exception": true,
      "members": {
        "Message": { "shape": "ErrorMessage" },
        "ResourceId": {
          "documentation": "<p>The ID of the resource causing the conflict.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>The type of the resource causing the conflict.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "ContactName": {
      "max": 255,
      "min": 1,
      "pattern": "^\\S[\\S ]*$",
      "type": "string"
    },
    "ContactPhoneNumber": {
      "max": 20,
      "min": 1,
      "pattern": "^[\\S ]+$",
      "type": "string"
    },
    "CountryCode": {
      "max": 2,
      "min": 2,
      "pattern": "^[A-Z]{2}$",
      "type": "string"
    },
    "CountryCodeList": {
      "member": { "shape": "CountryCode" },
      "type": "list"
    },
    "CreateOrderInput": {
      "members": {
        "LineItems": {
          "documentation": "<p>The line items that make up the order.</p>",
          "shape": "LineItemRequestListDefinition"
        },
        "OutpostIdentifier": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the Outpost. </p>",
          "shape": "OutpostIdentifier"
        },
        "PaymentOption": {
          "documentation": "<p>The payment option for the order.</p>",
          "shape": "PaymentOption"
        },
        "PaymentTerm": {
          "documentation": "<p>The payment terms for the order.</p>",
          "shape": "PaymentTerm"
        }
      },
      "required": ["OutpostIdentifier", "LineItems", "PaymentOption"],
      "type": "structure"
    },
    "CreateOrderOutput": {
      "members": {
        "Order": {
          "documentation": "<p>Information about this order.</p>",
          "shape": "Order"
        }
      },
      "type": "structure"
    },
    "CreateOutpostInput": {
      "members": {
        "AvailabilityZone": { "shape": "AvailabilityZone" },
        "AvailabilityZoneId": { "shape": "AvailabilityZoneId" },
        "Description": { "shape": "OutpostDescription" },
        "Name": { "shape": "OutpostName" },
        "SiteId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the site. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "shape": "SiteId"
        },
        "SupportedHardwareType": {
          "documentation": "<p> The type of hardware for this Outpost. </p>",
          "shape": "SupportedHardwareType"
        },
        "Tags": {
          "documentation": "<p>The tags to apply to the Outpost.</p>",
          "shape": "TagMap"
        }
      },
      "required": ["Name", "SiteId"],
      "type": "structure"
    },
    "CreateOutpostOutput": {
      "members": {
        "Outpost": { "shape": "Outpost" }
      },
      "type": "structure"
    },
    "CreateSiteInput": {
      "members": {
        "Description": { "shape": "SiteDescription" },
        "Name": { "shape": "SiteName" },
        "Notes": {
          "documentation": "<p>Additional information that you provide about site access requirements, electrician scheduling, personal protective equipment, or regulation of equipment materials that could affect your installation process. </p>",
          "shape": "SiteNotes"
        },
        "OperatingAddress": {
          "documentation": "<p> The location to install and power on the hardware. This address might be different from the shipping address. </p>",
          "shape": "Address"
        },
        "RackPhysicalProperties": {
          "documentation": "<p> Information about the physical and logistical details for the rack at this site. For more information about hardware requirements for racks, see <a href=\"https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#checklist\">Network readiness checklist</a> in the Amazon Web Services Outposts User Guide. </p>",
          "shape": "RackPhysicalProperties"
        },
        "ShippingAddress": {
          "documentation": "<p> The location to ship the hardware. This address might be different from the operating address. </p>",
          "shape": "Address"
        },
        "Tags": {
          "documentation": "<p> The tags to apply to a site. </p>",
          "shape": "TagMap"
        }
      },
      "required": ["Name"],
      "type": "structure"
    },
    "CreateSiteOutput": {
      "members": {
        "Site": { "shape": "Site" }
      },
      "type": "structure"
    },
    "DeleteOutpostInput": {
      "members": {
        "OutpostId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the Outpost. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "OutpostId",
          "shape": "OutpostId"
        }
      },
      "required": ["OutpostId"],
      "type": "structure"
    },
    "DeleteOutpostOutput": {
      "members": {},
      "type": "structure"
    },
    "DeleteSiteInput": {
      "members": {
        "SiteId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the site. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "SiteId",
          "shape": "SiteId"
        }
      },
      "required": ["SiteId"],
      "type": "structure"
    },
    "DeleteSiteOutput": {
      "members": {},
      "type": "structure"
    },
    "DistrictOrCounty": {
      "max": 60,
      "min": 1,
      "pattern": "^\\S[\\S ]*",
      "type": "string"
    },
    "EC2Capacity": {
      "documentation": "<p> Information about EC2 capacity. </p>",
      "members": {
        "Family": {
          "documentation": "<p> The family of the EC2 capacity. </p>",
          "shape": "Family"
        },
        "MaxSize": {
          "documentation": "<p> The maximum size of the EC2 capacity. </p>",
          "shape": "MaxSize"
        },
        "Quantity": {
          "documentation": "<p> The quantity of the EC2 capacity. </p>",
          "shape": "Quantity"
        }
      },
      "type": "structure"
    },
    "EC2CapacityListDefinition": {
      "member": { "shape": "EC2Capacity" },
      "type": "list"
    },
    "EC2FamilyList": {
      "member": { "shape": "Family" },
      "type": "list"
    },
    "ErrorMessage": {
      "max": 1000,
      "min": 1,
      "pattern": "^[\\S \\n]+$",
      "type": "string"
    },
    "Family": {
      "max": 10,
      "min": 1,
      "pattern": "[a-z0-9]+",
      "type": "string"
    },
    "FiberOpticCableType": {
      "enum": ["SINGLE_MODE", "MULTI_MODE"],
      "type": "string"
    },
    "GetCatalogItemInput": {
      "members": {
        "CatalogItemId": {
          "documentation": "<p>The ID of the catalog item.</p>",
          "location": "uri",
          "locationName": "CatalogItemId",
          "shape": "SkuCode"
        }
      },
      "required": ["CatalogItemId"],
      "type": "structure"
    },
    "GetCatalogItemOutput": {
      "members": {
        "CatalogItem": {
          "documentation": "<p>Information about this catalog item.</p>",
          "shape": "CatalogItem"
        }
      },
      "type": "structure"
    },
    "GetOrderInput": {
      "members": {
        "OrderId": {
          "documentation": "<p>The ID of the order.</p>",
          "location": "uri",
          "locationName": "OrderId",
          "shape": "OrderId"
        }
      },
      "required": ["OrderId"],
      "type": "structure"
    },
    "GetOrderOutput": {
      "members": {
        "Order": { "shape": "Order" }
      },
      "type": "structure"
    },
    "GetOutpostInput": {
      "members": {
        "OutpostId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the Outpost. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "OutpostId",
          "shape": "OutpostId"
        }
      },
      "required": ["OutpostId"],
      "type": "structure"
    },
    "GetOutpostInstanceTypesInput": {
      "members": {
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        },
        "OutpostId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the Outpost. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "OutpostId",
          "shape": "OutpostId"
        }
      },
      "required": ["OutpostId"],
      "type": "structure"
    },
    "GetOutpostInstanceTypesOutput": {
      "members": {
        "InstanceTypes": { "shape": "InstanceTypeListDefinition" },
        "NextToken": { "shape": "Token" },
        "OutpostArn": { "shape": "OutpostArn" },
        "OutpostId": {
          "documentation": "<p> The ID of the Outpost. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "shape": "OutpostId"
        }
      },
      "type": "structure"
    },
    "GetOutpostOutput": {
      "members": {
        "Outpost": { "shape": "Outpost" }
      },
      "type": "structure"
    },
    "GetSiteAddressInput": {
      "members": {
        "AddressType": {
          "documentation": "<p> The type of the address you request. </p>",
          "location": "querystring",
          "locationName": "AddressType",
          "shape": "AddressType"
        },
        "SiteId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the site. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "SiteId",
          "shape": "SiteId"
        }
      },
      "required": ["SiteId", "AddressType"],
      "type": "structure"
    },
    "GetSiteAddressOutput": {
      "members": {
        "Address": {
          "documentation": "<p> Information about the address. </p>",
          "shape": "Address"
        },
        "AddressType": {
          "documentation": "<p> The type of the address you receive. </p>",
          "shape": "AddressType"
        },
        "SiteId": { "shape": "SiteId" }
      },
      "type": "structure"
    },
    "GetSiteInput": {
      "members": {
        "SiteId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the site. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "SiteId",
          "shape": "SiteId"
        }
      },
      "required": ["SiteId"],
      "type": "structure"
    },
    "GetSiteOutput": {
      "members": {
        "Site": { "shape": "Site" }
      },
      "type": "structure"
    },
    "HostId": {
      "max": 50,
      "min": 1,
      "pattern": "^[A-Za-z0-9-]*$",
      "type": "string"
    },
    "HostIdList": {
      "member": { "shape": "HostId" },
      "type": "list"
    },
    "ISO8601Timestamp": { "type": "timestamp" },
    "InstanceType": {
      "documentation": "<p>The instance type.</p>",
      "type": "string"
    },
    "InstanceTypeItem": {
      "documentation": "<p>Information about an instance type.</p>",
      "members": {
        "InstanceType": { "shape": "InstanceType" }
      },
      "type": "structure"
    },
    "InstanceTypeListDefinition": {
      "documentation": "<p>Information about the instance types.</p>",
      "member": { "shape": "InstanceTypeItem" },
      "type": "list"
    },
    "InternalServerException": {
      "documentation": "<p>An internal error has occurred.</p>",
      "error": { "httpStatusCode": 500 },
      "exception": true,
      "members": {
        "Message": { "shape": "ErrorMessage" }
      },
      "type": "structure"
    },
    "LifeCycleStatus": {
      "documentation": "<p>The life cycle status.</p>",
      "max": 20,
      "min": 1,
      "pattern": "^[ A-Za-z]+$",
      "type": "string"
    },
    "LifeCycleStatusList": {
      "max": 5,
      "member": { "shape": "LifeCycleStatus" },
      "min": 1,
      "type": "list"
    },
    "LineItem": {
      "documentation": "<p>Information about a line item.</p>",
      "members": {
        "CatalogItemId": {
          "documentation": "<p> The ID of the catalog item. </p>",
          "shape": "SkuCode"
        },
        "LineItemId": {
          "documentation": "<p>The ID of the line item.</p>",
          "shape": "LineItemId"
        },
        "Quantity": {
          "documentation": "<p>The quantity of the line item.</p>",
          "shape": "LineItemQuantity"
        },
        "Status": {
          "documentation": "<p>The status of the line item.</p>",
          "shape": "LineItemStatus"
        }
      },
      "type": "structure"
    },
    "LineItemId": {
      "pattern": "ooi-[a-f0-9]{17}",
      "type": "string"
    },
    "LineItemListDefinition": {
      "member": { "shape": "LineItem" },
      "type": "list"
    },
    "LineItemQuantity": {
      "max": 20,
      "min": 1,
      "type": "integer"
    },
    "LineItemRequest": {
      "documentation": "<p>Information about a line item request.</p>",
      "members": {
        "CatalogItemId": {
          "documentation": "<p>The ID of the catalog item.</p>",
          "shape": "SkuCode"
        },
        "Quantity": {
          "documentation": "<p>The quantity of a line item request.</p>",
          "shape": "LineItemQuantity"
        }
      },
      "type": "structure"
    },
    "LineItemRequestListDefinition": {
      "max": 20,
      "member": { "shape": "LineItemRequest" },
      "min": 1,
      "type": "list"
    },
    "LineItemStatus": {
      "enum": ["PREPARING", "BUILDING", "SHIPPED", "DELIVERED", "INSTALLING", "INSTALLED", "ERROR", "CANCELLED"],
      "type": "string"
    },
    "LineItemStatusCounts": {
      "key": { "shape": "LineItemStatus" },
      "type": "map",
      "value": { "shape": "LineItemQuantity" }
    },
    "ListAssetsInput": {
      "members": {
        "HostIdFilter": {
          "documentation": "<p> A filter for the host ID of Dedicated Hosts on the Outpost. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "HostIdFilter",
          "shape": "HostIdList"
        },
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        },
        "OutpostIdentifier": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the Outpost. </p>",
          "location": "uri",
          "locationName": "OutpostId",
          "shape": "OutpostIdentifier"
        }
      },
      "required": ["OutpostIdentifier"],
      "type": "structure"
    },
    "ListAssetsOutput": {
      "members": {
        "Assets": {
          "documentation": "<p> Information about hardware assets. </p>",
          "shape": "AssetListDefinition"
        },
        "NextToken": { "shape": "Token" }
      },
      "type": "structure"
    },
    "ListCatalogItemsInput": {
      "members": {
        "EC2FamilyFilter": {
          "documentation": "<p> A filter for EC2 family options for items in the catalog. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "EC2FamilyFilter",
          "shape": "EC2FamilyList"
        },
        "ItemClassFilter": {
          "documentation": "<p> A filter for the class of items in the catalog. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "ItemClassFilter",
          "shape": "CatalogItemClassList"
        },
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        },
        "SupportedStorageFilter": {
          "documentation": "<p> A filter for the storage options of items in the catalog. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "SupportedStorageFilter",
          "shape": "SupportedStorageList"
        }
      },
      "type": "structure"
    },
    "ListCatalogItemsOutput": {
      "members": {
        "CatalogItems": {
          "documentation": "<p>Information about the catalog items.</p>",
          "shape": "CatalogItemListDefinition"
        },
        "NextToken": { "shape": "Token" }
      },
      "type": "structure"
    },
    "ListOrdersInput": {
      "members": {
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        },
        "OutpostIdentifierFilter": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the Outpost. </p>",
          "location": "querystring",
          "locationName": "OutpostIdentifierFilter",
          "shape": "OutpostIdentifier"
        }
      },
      "type": "structure"
    },
    "ListOrdersOutput": {
      "members": {
        "NextToken": { "shape": "Token" },
        "Orders": {
          "documentation": "<p> Information about the orders. </p>",
          "shape": "OrderSummaryListDefinition"
        }
      },
      "type": "structure"
    },
    "ListOutpostsInput": {
      "members": {
        "AvailabilityZoneFilter": {
          "documentation": "<p> A filter for the Availability Zone (<code>us-east-1a</code>) of the Outpost. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "AvailabilityZoneFilter",
          "shape": "AvailabilityZoneList"
        },
        "AvailabilityZoneIdFilter": {
          "documentation": "<p> A filter for the AZ IDs (<code>use1-az1</code>) of the Outpost. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "AvailabilityZoneIdFilter",
          "shape": "AvailabilityZoneIdList"
        },
        "LifeCycleStatusFilter": {
          "documentation": "<p> A filter for the lifecycle status of the Outpost. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "LifeCycleStatusFilter",
          "shape": "LifeCycleStatusList"
        },
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListOutpostsOutput": {
      "members": {
        "NextToken": { "shape": "Token" },
        "Outposts": { "shape": "outpostListDefinition" }
      },
      "type": "structure"
    },
    "ListSitesInput": {
      "members": {
        "MaxResults": {
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults1000"
        },
        "NextToken": {
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "Token"
        },
        "OperatingAddressCityFilter": {
          "documentation": "<p> A filter for the city of the Outpost site. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "OperatingAddressCityFilter",
          "shape": "CityList"
        },
        "OperatingAddressCountryCodeFilter": {
          "documentation": "<p> A filter for the country code of the Outpost site. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "OperatingAddressCountryCodeFilter",
          "shape": "CountryCodeList"
        },
        "OperatingAddressStateOrRegionFilter": {
          "documentation": "<p> A filter for the state/region of the Outpost site. </p> <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>",
          "location": "querystring",
          "locationName": "OperatingAddressStateOrRegionFilter",
          "shape": "StateOrRegionList"
        }
      },
      "type": "structure"
    },
    "ListSitesOutput": {
      "members": {
        "NextToken": { "shape": "Token" },
        "Sites": { "shape": "siteListDefinition" }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        }
      },
      "required": ["ResourceArn"],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>The resource tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "MaxResults1000": {
      "box": true,
      "documentation": "<p>The maximum page size.</p>",
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "MaxSize": { "type": "string" },
    "MaximumSupportedWeightLbs": {
      "enum": ["NO_LIMIT", "MAX_1400_LBS", "MAX_1600_LBS", "MAX_1800_LBS", "MAX_2000_LBS"],
      "type": "string"
    },
    "Municipality": {
      "max": 180,
      "min": 0,
      "pattern": "^\\S[\\S ]*$",
      "type": "string"
    },
    "NotFoundException": {
      "documentation": "<p>The specified request is not valid.</p>",
      "error": { "httpStatusCode": 404 },
      "exception": true,
      "members": {
        "Message": { "shape": "ErrorMessage" }
      },
      "type": "structure"
    },
    "OpticalStandard": {
      "enum": [
        "OPTIC_10GBASE_SR",
        "OPTIC_10GBASE_IR",
        "OPTIC_10GBASE_LR",
        "OPTIC_40GBASE_SR",
        "OPTIC_40GBASE_ESR",
        "OPTIC_40GBASE_IR4_LR4L",
        "OPTIC_40GBASE_LR4",
        "OPTIC_100GBASE_SR4",
        "OPTIC_100GBASE_CWDM4",
        "OPTIC_100GBASE_LR4",
        "OPTIC_100G_PSM4_MSA",
        "OPTIC_1000BASE_LX",
        "OPTIC_1000BASE_SX"
      ],
      "type": "string"
    },
    "Order": {
      "documentation": "<p>Information about an order.</p>",
      "members": {
        "LineItems": {
          "documentation": "<p>The line items for the order</p>",
          "shape": "LineItemListDefinition"
        },
        "OrderFulfilledDate": {
          "documentation": "<p>The fulfillment date of the order.</p>",
          "shape": "ISO8601Timestamp"
        },
        "OrderId": {
          "documentation": "<p>The ID of the order.</p>",
          "shape": "OrderId"
        },
        "OrderSubmissionDate": {
          "documentation": "<p>The submission date for the order.</p>",
          "shape": "ISO8601Timestamp"
        },
        "OutpostId": {
          "documentation": "<p> The ID of the Outpost in the order. </p>",
          "shape": "OutpostIdOnly"
        },
        "PaymentOption": {
          "documentation": "<p>The payment option for the order.</p>",
          "shape": "PaymentOption"
        },
        "Status": {
          "documentation": "<p>The status of the order.</p> <ul> <li> <p> <code>PREPARING</code> - Order is received and being prepared.</p> </li> <li> <p> <code>IN_PROGRESS</code> - Order is either being built, shipped, or installed. To get more details, see the <code>LineItem</code> status.</p> </li> <li> <p> <code>COMPLETED</code> - Order is complete.</p> </li> <li> <p> <code>CANCELLED</code> - Order is cancelled.</p> </li> <li> <p> <code>ERROR</code> - Customer should contact support.</p> </li> </ul> <note> <p>The following status are deprecated: <code>RECEIVED</code>, <code>PENDING</code>, <code>PROCESSING</code>, <code>INSTALLING</code>, and <code>FULFILLED</code>. </p> </note>",
          "shape": "OrderStatus"
        }
      },
      "type": "structure"
    },
    "OrderId": {
      "max": 20,
      "min": 1,
      "pattern": "oo-[a-f0-9]{17}$",
      "type": "string"
    },
    "OrderStatus": {
      "enum": [
        "RECEIVED",
        "PENDING",
        "PROCESSING",
        "INSTALLING",
        "FULFILLED",
        "CANCELLED",
        "PREPARING",
        "IN_PROGRESS",
        "COMPLETED",
        "ERROR"
      ],
      "type": "string"
    },
    "OrderSummary": {
      "documentation": "<p> A summary of line items in your order. </p>",
      "members": {
        "LineItemCountsByStatus": {
          "documentation": "<p> The status of all line items in the order. </p>",
          "shape": "LineItemStatusCounts"
        },
        "OrderFulfilledDate": {
          "documentation": "<p> Fulfilment date for the order. </p>",
          "shape": "ISO8601Timestamp"
        },
        "OrderId": {
          "documentation": "<p> The ID of the order. </p>",
          "shape": "OrderId"
        },
        "OrderSubmissionDate": {
          "documentation": "<p> Submission date for the order. </p>",
          "shape": "ISO8601Timestamp"
        },
        "OrderType": {
          "documentation": "<p> The type of order. </p>",
          "shape": "OrderType"
        },
        "OutpostId": {
          "documentation": "<p> The ID of the Outpost. </p>",
          "shape": "OutpostIdOnly"
        },
        "Status": {
          "documentation": "<p>The status of the order.</p> <ul> <li> <p> <code>PREPARING</code> - Order is received and is being prepared.</p> </li> <li> <p> <code>IN_PROGRESS</code> - Order is either being built, shipped, or installed. For more information, see the <code>LineItem</code> status.</p> </li> <li> <p> <code>COMPLETED</code> - Order is complete.</p> </li> <li> <p> <code>CANCELLED</code> - Order is cancelled.</p> </li> <li> <p> <code>ERROR</code> - Customer should contact support.</p> </li> </ul> <note> <p>The following statuses are deprecated: <code>RECEIVED</code>, <code>PENDING</code>, <code>PROCESSING</code>, <code>INSTALLING</code>, and <code>FULFILLED</code>. </p> </note>",
          "shape": "OrderStatus"
        }
      },
      "type": "structure"
    },
    "OrderSummaryListDefinition": {
      "member": { "shape": "OrderSummary" },
      "type": "list"
    },
    "OrderType": {
      "enum": ["OUTPOST", "REPLACEMENT"],
      "type": "string"
    },
    "Outpost": {
      "documentation": "<p>Information about an Outpost.</p>",
      "members": {
        "AvailabilityZone": { "shape": "AvailabilityZone" },
        "AvailabilityZoneId": { "shape": "AvailabilityZoneId" },
        "Description": { "shape": "OutpostDescription" },
        "LifeCycleStatus": { "shape": "LifeCycleStatus" },
        "Name": { "shape": "OutpostName" },
        "OutpostArn": { "shape": "OutpostArn" },
        "OutpostId": {
          "documentation": "<p> The ID of the Outpost. </p>",
          "shape": "OutpostId"
        },
        "OwnerId": { "shape": "OwnerId" },
        "SiteArn": { "shape": "SiteArn" },
        "SiteId": { "shape": "SiteId" },
        "SupportedHardwareType": {
          "documentation": "<p> The hardware type. </p>",
          "shape": "SupportedHardwareType"
        },
        "Tags": {
          "documentation": "<p>The Outpost tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "OutpostArn": {
      "documentation": "<p>The Amazon Resource Name (ARN) of the Outpost.</p>",
      "max": 255,
      "min": 1,
      "pattern": "^arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/op-[a-f0-9]{17}$",
      "type": "string"
    },
    "OutpostDescription": {
      "documentation": "<p>The description of the Outpost.</p>",
      "max": 1000,
      "min": 0,
      "pattern": "^[\\S ]*$",
      "type": "string"
    },
    "OutpostId": {
      "max": 180,
      "min": 1,
      "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$",
      "type": "string"
    },
    "OutpostIdOnly": {
      "max": 20,
      "min": 1,
      "pattern": "^op-[a-f0-9]{17}$",
      "type": "string"
    },
    "OutpostIdentifier": {
      "max": 180,
      "min": 1,
      "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:outpost/)?op-[a-f0-9]{17}$",
      "type": "string"
    },
    "OutpostName": {
      "documentation": "<p>The name of the Outpost.</p>",
      "max": 255,
      "min": 1,
      "pattern": "^[\\S ]+$",
      "type": "string"
    },
    "OwnerId": {
      "documentation": "<p>The Amazon Web Services account ID of the Outpost owner.</p>",
      "max": 12,
      "min": 12,
      "pattern": "\\d{12}",
      "type": "string"
    },
    "PaymentOption": {
      "enum": ["ALL_UPFRONT", "NO_UPFRONT", "PARTIAL_UPFRONT"],
      "type": "string"
    },
    "PaymentTerm": {
      "enum": ["THREE_YEARS"],
      "type": "string"
    },
    "PostalCode": {
      "max": 20,
      "min": 1,
      "pattern": "^[a-zA-Z0-9 -]+$",
      "type": "string"
    },
    "PowerConnector": {
      "enum": ["L6_30P", "IEC309", "AH530P7W", "AH532P6W"],
      "type": "string"
    },
    "PowerDrawKva": {
      "enum": ["POWER_5_KVA", "POWER_10_KVA", "POWER_15_KVA"],
      "type": "string"
    },
    "PowerFeedDrop": {
      "enum": ["ABOVE_RACK", "BELOW_RACK"],
      "type": "string"
    },
    "PowerPhase": {
      "enum": ["SINGLE_PHASE", "THREE_PHASE"],
      "type": "string"
    },
    "Quantity": { "type": "string" },
    "RackId": {
      "max": 20,
      "min": 5,
      "pattern": "^[\\S \\n]+$",
      "type": "string"
    },
    "RackPhysicalProperties": {
      "documentation": "<p> Information about the physical and logistical details for racks at sites. For more information about hardware requirements for racks, see <a href=\"https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#checklist\">Network readiness checklist</a> in the Amazon Web Services Outposts User Guide. </p>",
      "members": {
        "FiberOpticCableType": {
          "documentation": "<p>The type of fiber used to attach the Outpost to the network. </p>",
          "shape": "FiberOpticCableType"
        },
        "MaximumSupportedWeightLbs": {
          "documentation": "<p>The maximum rack weight that this site can support. <code>NO_LIMIT</code> is over 2000 lbs (907 kg). </p>",
          "shape": "MaximumSupportedWeightLbs"
        },
        "OpticalStandard": {
          "documentation": "<p>The type of optical standard used to attach the Outpost to the network. This field is dependent on uplink speed, fiber type, and distance to the upstream device. For more information about networking requirements for racks, see <a href=\"https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#facility-networking\">Network</a> in the Amazon Web Services Outposts User Guide. </p>",
          "shape": "OpticalStandard"
        },
        "PowerConnector": {
          "documentation": "<p>The power connector for the hardware. </p>",
          "shape": "PowerConnector"
        },
        "PowerDrawKva": {
          "documentation": "<p>The power draw available at the hardware placement position for the rack. </p>",
          "shape": "PowerDrawKva"
        },
        "PowerFeedDrop": {
          "documentation": "<p>The position of the power feed.</p>",
          "shape": "PowerFeedDrop"
        },
        "PowerPhase": {
          "documentation": "<p>The power option that you can provide for hardware.</p>",
          "shape": "PowerPhase"
        },
        "UplinkCount": {
          "documentation": "<p>The number of uplinks each Outpost network device.</p>",
          "shape": "UplinkCount"
        },
        "UplinkGbps": {
          "documentation": "<p>The uplink speed the rack supports for the connection to the Region. </p>",
          "shape": "UplinkGbps"
        }
      },
      "type": "structure"
    },
    "ResourceType": {
      "enum": ["OUTPOST", "ORDER"],
      "type": "string"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>You have exceeded a service quota.</p>",
      "error": { "httpStatusCode": 402 },
      "exception": true,
      "members": {
        "Message": { "shape": "ErrorMessage" }
      },
      "type": "structure"
    },
    "Site": {
      "documentation": "<p>Information about a site.</p>",
      "members": {
        "AccountId": { "shape": "AccountId" },
        "Description": { "shape": "SiteDescription" },
        "Name": { "shape": "SiteName" },
        "Notes": {
          "documentation": "<p> Notes about a site. </p>",
          "shape": "SiteNotes"
        },
        "OperatingAddressCity": {
          "documentation": "<p> City where the hardware is installed and powered on. </p>",
          "shape": "City"
        },
        "OperatingAddressCountryCode": {
          "documentation": "<p> The ISO-3166 two-letter country code where the hardware is installed and powered on. </p>",
          "shape": "CountryCode"
        },
        "OperatingAddressStateOrRegion": {
          "documentation": "<p> State or region where the hardware is installed and powered on. </p>",
          "shape": "StateOrRegion"
        },
        "RackPhysicalProperties": {
          "documentation": "<p> Information about the physical and logistical details for a rack at the site. </p>",
          "shape": "RackPhysicalProperties"
        },
        "SiteArn": { "shape": "SiteArn" },
        "SiteId": { "shape": "SiteId" },
        "Tags": {
          "documentation": "<p>The site tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "SiteArn": {
      "documentation": "<p>The Amazon Resource Name (ARN) of the site.</p>",
      "max": 255,
      "min": 1,
      "pattern": "^arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:site/(os-[a-f0-9]{17})$",
      "type": "string"
    },
    "SiteDescription": {
      "documentation": "<p>The description of the site.</p>",
      "max": 1001,
      "min": 1,
      "pattern": "^[\\S ]+$",
      "type": "string"
    },
    "SiteId": {
      "documentation": "<p> The ID of the site. </p>",
      "max": 255,
      "min": 1,
      "pattern": "^(arn:aws([a-z-]+)?:outposts:[a-z\\d-]+:\\d{12}:site/)?(os-[a-f0-9]{17})$",
      "type": "string"
    },
    "SiteName": {
      "documentation": "<p>The name of the site.</p>",
      "max": 1000,
      "min": 1,
      "pattern": "^[\\S ]+$",
      "type": "string"
    },
    "SiteNotes": {
      "max": 2000,
      "min": 1,
      "pattern": "^[\\S \\n]+$",
      "type": "string"
    },
    "SkuCode": {
      "max": 10,
      "min": 1,
      "pattern": "OR-[A-Z0-9]{7}",
      "type": "string"
    },
    "StateOrRegion": {
      "max": 50,
      "min": 1,
      "pattern": "^\\S[\\S ]*$",
      "type": "string"
    },
    "StateOrRegionList": {
      "member": { "shape": "StateOrRegion" },
      "type": "list"
    },
    "String": {
      "max": 1000,
      "min": 1,
      "pattern": "^[\\S \\n]+$",
      "type": "string"
    },
    "SupportedHardwareType": {
      "enum": ["RACK", "SERVER"],
      "type": "string"
    },
    "SupportedStorageEnum": {
      "enum": ["EBS", "S3"],
      "type": "string"
    },
    "SupportedStorageList": {
      "member": { "shape": "SupportedStorageEnum" },
      "type": "list"
    },
    "SupportedUplinkGbps": { "type": "integer" },
    "SupportedUplinkGbpsListDefinition": {
      "member": { "shape": "SupportedUplinkGbps" },
      "type": "list"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": { "shape": "TagKey" },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": { "shape": "TagKey" },
      "max": 50,
      "min": 1,
      "type": "map",
      "value": { "shape": "TagValue" }
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        },
        "Tags": {
          "documentation": "<p>The tags to add to the resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": ["ResourceArn", "Tags"],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "pattern": "^[\\S \\n]+$",
      "type": "string"
    },
    "Token": {
      "documentation": "<p>The pagination token.</p>",
      "max": 1005,
      "min": 1,
      "pattern": "^(\\d+)##(\\S+)$",
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        },
        "TagKeys": {
          "documentation": "<p>The tag keys.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": ["ResourceArn", "TagKeys"],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateOutpostInput": {
      "members": {
        "Description": { "shape": "OutpostDescription" },
        "Name": { "shape": "OutpostName" },
        "OutpostId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the Outpost. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "OutpostId",
          "shape": "OutpostId"
        },
        "SupportedHardwareType": {
          "documentation": "<p> The type of hardware for this Outpost. </p>",
          "shape": "SupportedHardwareType"
        }
      },
      "required": ["OutpostId"],
      "type": "structure"
    },
    "UpdateOutpostOutput": {
      "members": {
        "Outpost": { "shape": "Outpost" }
      },
      "type": "structure"
    },
    "UpdateSiteAddressInput": {
      "members": {
        "Address": {
          "documentation": "<p> The address for the site. </p>",
          "shape": "Address"
        },
        "AddressType": {
          "documentation": "<p> The type of the address. </p>",
          "shape": "AddressType"
        },
        "SiteId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the site. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "SiteId",
          "shape": "SiteId"
        }
      },
      "required": ["SiteId", "AddressType", "Address"],
      "type": "structure"
    },
    "UpdateSiteAddressOutput": {
      "members": {
        "Address": {
          "documentation": "<p> Information about an address. </p>",
          "shape": "Address"
        },
        "AddressType": {
          "documentation": "<p> The type of the address. </p>",
          "shape": "AddressType"
        }
      },
      "type": "structure"
    },
    "UpdateSiteInput": {
      "members": {
        "Description": { "shape": "SiteDescription" },
        "Name": { "shape": "SiteName" },
        "Notes": {
          "documentation": "<p> Notes about a site. </p>",
          "shape": "SiteNotes"
        },
        "SiteId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the site. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "SiteId",
          "shape": "SiteId"
        }
      },
      "required": ["SiteId"],
      "type": "structure"
    },
    "UpdateSiteOutput": {
      "members": {
        "Site": { "shape": "Site" }
      },
      "type": "structure"
    },
    "UpdateSiteRackPhysicalPropertiesInput": {
      "members": {
        "FiberOpticCableType": {
          "documentation": "<p> Specify the type of fiber that you will use to attach the Outpost to your network. </p>",
          "shape": "FiberOpticCableType"
        },
        "MaximumSupportedWeightLbs": {
          "documentation": "<p> Specify the maximum rack weight that this site can support. <code>NO_LIMIT</code> is over 2000lbs. </p>",
          "shape": "MaximumSupportedWeightLbs"
        },
        "OpticalStandard": {
          "documentation": "<p>Specify the type of optical standard that you will use to attach the Outpost to your network. This field is dependent on uplink speed, fiber type, and distance to the upstream device. For more information about networking requirements for racks, see <a href=\"https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#facility-networking\">Network</a> in the Amazon Web Services Outposts User Guide. </p> <ul> <li> <p> <code>OPTIC_10GBASE_SR</code>: 10GBASE-SR</p> </li> <li> <p> <code>OPTIC_10GBASE_IR</code>: 10GBASE-IR</p> </li> <li> <p> <code>OPTIC_10GBASE_LR</code>: 10GBASE-LR</p> </li> <li> <p> <code>OPTIC_40GBASE_SR</code>: 40GBASE-SR</p> </li> <li> <p> <code>OPTIC_40GBASE_ESR</code>: 40GBASE-ESR</p> </li> <li> <p> <code>OPTIC_40GBASE_IR4_LR4L</code>: 40GBASE-IR (LR4L)</p> </li> <li> <p> <code>OPTIC_40GBASE_LR4</code>: 40GBASE-LR4</p> </li> <li> <p> <code>OPTIC_100GBASE_SR4</code>: 100GBASE-SR4</p> </li> <li> <p> <code>OPTIC_100GBASE_CWDM4</code>: 100GBASE-CWDM4</p> </li> <li> <p> <code>OPTIC_100GBASE_LR4</code>: 100GBASE-LR4</p> </li> <li> <p> <code>OPTIC_100G_PSM4_MSA</code>: 100G PSM4 MSA</p> </li> <li> <p> <code>OPTIC_1000BASE_LX</code>: 1000Base-LX</p> </li> <li> <p> <code>OPTIC_1000BASE_SX</code> : 1000Base-SX</p> </li> </ul>",
          "shape": "OpticalStandard"
        },
        "PowerConnector": {
          "documentation": "<p> Specify the power connector that Amazon Web Services should plan to provide for connections to the hardware. Note the correlation between <code>PowerPhase</code> and <code>PowerConnector</code>. </p> <ul> <li> <p>Single-phase AC feed</p> <ul> <li> <p> <b>L6-30P</b> – (common in US); 30A; single phase</p> </li> <li> <p> <b>IEC309 (blue)</b> – P+N+E, 6hr; 32 A; single phase</p> </li> </ul> </li> <li> <p>Three-phase AC feed</p> <ul> <li> <p> <b>AH530P7W (red)</b> – 3P+N+E, 7hr; 30A; three phase</p> </li> <li> <p> <b>AH532P6W (red)</b> – 3P+N+E, 6hr; 32A; three phase</p> </li> </ul> </li> </ul>",
          "shape": "PowerConnector"
        },
        "PowerDrawKva": {
          "documentation": "<p>Specify in kVA the power draw available at the hardware placement position for the rack.</p>",
          "shape": "PowerDrawKva"
        },
        "PowerFeedDrop": {
          "documentation": "<p> Specify whether the power feed comes above or below the rack. </p>",
          "shape": "PowerFeedDrop"
        },
        "PowerPhase": {
          "documentation": "<p> Specify the power option that you can provide for hardware. </p> <ul> <li> <p>Single-phase AC feed: 200 V to 277 V, 50 Hz or 60 Hz</p> </li> <li> <p>Three-phase AC feed: 346 V to 480 V, 50 Hz or 60 Hz</p> </li> </ul>",
          "shape": "PowerPhase"
        },
        "SiteId": {
          "documentation": "<p> The ID or the Amazon Resource Name (ARN) of the site. </p> <note> <p>In requests, Amazon Web Services Outposts accepts the Amazon Resource Name (ARN) or an ID for Outposts and sites throughout the Outposts Query API. To address backwards compatibility, the parameter names <code>OutpostID</code> or <code>SiteID</code> remain in use. Despite the parameter name, you can make the request with an ARN.</p> </note>",
          "location": "uri",
          "locationName": "SiteId",
          "shape": "SiteId"
        },
        "UplinkCount": {
          "documentation": "<p>Racks come with two Outpost network devices. Depending on the supported uplink speed at the site, the Outpost network devices provide a variable number of uplinks. Specify the number of uplinks for each Outpost network device that you intend to use to connect the rack to your network. Note the correlation between <code>UplinkGbps</code> and <code>UplinkCount</code>. </p> <ul> <li> <p>1Gbps - Uplinks available: 1, 2, 4, 6, 8</p> </li> <li> <p>10Gbps - Uplinks available: 1, 2, 4, 8, 12, 16</p> </li> <li> <p>40 and 100 Gbps- Uplinks available: 1, 2, 4</p> </li> </ul>",
          "shape": "UplinkCount"
        },
        "UplinkGbps": {
          "documentation": "<p> Specify the uplink speed the rack should support for the connection to the Region. </p>",
          "shape": "UplinkGbps"
        }
      },
      "required": ["SiteId"],
      "type": "structure"
    },
    "UpdateSiteRackPhysicalPropertiesOutput": {
      "members": {
        "Site": { "shape": "Site" }
      },
      "type": "structure"
    },
    "UplinkCount": {
      "enum": [
        "UPLINK_COUNT_1",
        "UPLINK_COUNT_2",
        "UPLINK_COUNT_3",
        "UPLINK_COUNT_4",
        "UPLINK_COUNT_5",
        "UPLINK_COUNT_6",
        "UPLINK_COUNT_7",
        "UPLINK_COUNT_8",
        "UPLINK_COUNT_12",
        "UPLINK_COUNT_16"
      ],
      "type": "string"
    },
    "UplinkGbps": {
      "enum": ["UPLINK_1G", "UPLINK_10G", "UPLINK_40G", "UPLINK_100G"],
      "type": "string"
    },
    "ValidationException": {
      "documentation": "<p>A parameter is not valid.</p>",
      "error": { "httpStatusCode": 400 },
      "exception": true,
      "members": {
        "Message": { "shape": "ErrorMessage" }
      },
      "type": "structure"
    },
    "outpostListDefinition": {
      "documentation": "<p>Information about the Outposts.</p>",
      "member": { "shape": "Outpost" },
      "type": "list"
    },
    "siteListDefinition": {
      "documentation": "<p>Information about the sites.</p>",
      "member": { "shape": "Site" },
      "type": "list"
    }
  },
  "version": "2.0"
}
