{
  "documentation": "<p>Amazon Web Services Transfer Family is a fully managed service that enables the transfer of files over the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage Service (Amazon S3). Amazon Web Services helps you seamlessly migrate your file transfer workflows to Amazon Web Services Transfer Family by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53 so nothing changes for your customers and partners, or their applications. With your data in Amazon S3, you can use it with Amazon Web Services services for processing, analytics, machine learning, and archiving. Getting started with Amazon Web Services Transfer Family is easy since there is no infrastructure to buy and set up.</p>",
  "metadata": {
    "apiVersion": "2018-11-05",
    "endpointPrefix": "transfer",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceAbbreviation": "AWS Transfer",
    "serviceFullName": "AWS Transfer Family",
    "serviceId": "Transfer",
    "signatureVersion": "v4",
    "signingName": "transfer",
    "targetPrefix": "TransferService",
    "uid": "transfer-2018-11-05"
  },
  "operations": {
    "CreateAccess": {
      "documentation": "<p>Used by administrators to choose which groups in the directory should have access to upload and download files over the enabled protocols using Amazon Web Services Transfer Family. For example, a Microsoft Active Directory might contain 50,000 users, but only a small fraction might need the ability to transfer files to the server. An administrator can use <code>CreateAccess</code> to limit the access to the correct set of users who need this ability.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceExistsException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "CreateAccessRequest" },
      "name": "CreateAccess",
      "output": { "shape": "CreateAccessResponse" }
    },
    "CreateServer": {
      "documentation": "<p>Instantiates an auto-scaling virtual server based on the selected file transfer protocol in Amazon Web Services. When you make updates to your file transfer protocol-enabled server or when you work with users, use the service-generated <code>ServerId</code> property that is assigned to the newly created server.</p>",
      "errors": [
        { "shape": "AccessDeniedException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceExistsException" },
        { "shape": "ResourceNotFoundException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "CreateServerRequest" },
      "name": "CreateServer",
      "output": { "shape": "CreateServerResponse" }
    },
    "CreateUser": {
      "documentation": "<p>Creates a user and associates them with an existing file transfer protocol-enabled server. You can only create and associate users with servers that have the <code>IdentityProviderType</code> set to <code>SERVICE_MANAGED</code>. Using parameters for <code>CreateUser</code>, you can specify the user name, set the home directory, store the user's public key, and assign the user's Amazon Web Services Identity and Access Management (IAM) role. You can also optionally add a session policy, and assign metadata with tags that can be used to group and search for users.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceExistsException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "CreateUserRequest" },
      "name": "CreateUser",
      "output": { "shape": "CreateUserResponse" }
    },
    "CreateWorkflow": {
      "documentation": "<p> Allows you to create a workflow with specified steps and step details the workflow invokes after file transfer completes. After creating a workflow, you can associate the workflow created with any transfer servers by specifying the <code>workflow-details</code> field in <code>CreateServer</code> and <code>UpdateServer</code> operations. </p>",
      "errors": [
        { "shape": "AccessDeniedException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceExistsException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "CreateWorkflowRequest" },
      "name": "CreateWorkflow",
      "output": { "shape": "CreateWorkflowResponse" }
    },
    "DeleteAccess": {
      "documentation": "<p>Allows you to delete the access specified in the <code>ServerID</code> and <code>ExternalID</code> parameters.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DeleteAccessRequest" },
      "name": "DeleteAccess"
    },
    "DeleteServer": {
      "documentation": "<p>Deletes the file transfer protocol-enabled server that you specify.</p> <p>No response returns from this operation.</p>",
      "errors": [
        { "shape": "AccessDeniedException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DeleteServerRequest" },
      "name": "DeleteServer"
    },
    "DeleteSshPublicKey": {
      "documentation": "<p>Deletes a user's Secure Shell (SSH) public key.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DeleteSshPublicKeyRequest" },
      "name": "DeleteSshPublicKey"
    },
    "DeleteUser": {
      "documentation": "<p>Deletes the user belonging to a file transfer protocol-enabled server you specify.</p> <p>No response returns from this operation.</p> <note> <p>When you delete a user from a server, the user's information is lost.</p> </note>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DeleteUserRequest" },
      "name": "DeleteUser"
    },
    "DeleteWorkflow": {
      "documentation": "<p>Deletes the specified workflow.</p>",
      "errors": [
        { "shape": "AccessDeniedException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DeleteWorkflowRequest" },
      "name": "DeleteWorkflow"
    },
    "DescribeAccess": {
      "documentation": "<p>Describes the access that is assigned to the specific file transfer protocol-enabled server, as identified by its <code>ServerId</code> property and its <code>ExternalID</code>.</p> <p>The response from this call returns the properties of the access that is associated with the <code>ServerId</code> value that was specified.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DescribeAccessRequest" },
      "name": "DescribeAccess",
      "output": { "shape": "DescribeAccessResponse" }
    },
    "DescribeExecution": {
      "documentation": "<p>You can use <code>DescribeExecution</code> to check the details of the execution of the specified workflow.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DescribeExecutionRequest" },
      "name": "DescribeExecution",
      "output": { "shape": "DescribeExecutionResponse" }
    },
    "DescribeSecurityPolicy": {
      "documentation": "<p>Describes the security policy that is attached to your file transfer protocol-enabled server. The response contains a description of the security policy's properties. For more information about security policies, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html\">Working with security policies</a>.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DescribeSecurityPolicyRequest" },
      "name": "DescribeSecurityPolicy",
      "output": { "shape": "DescribeSecurityPolicyResponse" }
    },
    "DescribeServer": {
      "documentation": "<p>Describes a file transfer protocol-enabled server that you specify by passing the <code>ServerId</code> parameter.</p> <p>The response contains a description of a server's properties. When you set <code>EndpointType</code> to VPC, the response will contain the <code>EndpointDetails</code>.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DescribeServerRequest" },
      "name": "DescribeServer",
      "output": { "shape": "DescribeServerResponse" }
    },
    "DescribeUser": {
      "documentation": "<p>Describes the user assigned to the specific file transfer protocol-enabled server, as identified by its <code>ServerId</code> property.</p> <p>The response from this call returns the properties of the user associated with the <code>ServerId</code> value that was specified.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DescribeUserRequest" },
      "name": "DescribeUser",
      "output": { "shape": "DescribeUserResponse" }
    },
    "DescribeWorkflow": {
      "documentation": "<p>Describes the specified workflow.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "DescribeWorkflowRequest" },
      "name": "DescribeWorkflow",
      "output": { "shape": "DescribeWorkflowResponse" }
    },
    "ImportSshPublicKey": {
      "documentation": "<p>Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code> value assigned to the specific file transfer protocol-enabled server, identified by <code>ServerId</code>.</p> <p>The response returns the <code>UserName</code> value, the <code>ServerId</code> value, and the name of the <code>SshPublicKeyId</code>.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceExistsException" },
        { "shape": "ResourceNotFoundException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "ImportSshPublicKeyRequest" },
      "name": "ImportSshPublicKey",
      "output": { "shape": "ImportSshPublicKeyResponse" }
    },
    "ListAccesses": {
      "documentation": "<p>Lists the details for all the accesses you have on your server.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidNextTokenException" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "ListAccessesRequest" },
      "name": "ListAccesses",
      "output": { "shape": "ListAccessesResponse" }
    },
    "ListExecutions": {
      "documentation": "<p>Lists all executions for the specified workflow.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidNextTokenException" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "ListExecutionsRequest" },
      "name": "ListExecutions",
      "output": { "shape": "ListExecutionsResponse" }
    },
    "ListSecurityPolicies": {
      "documentation": "<p>Lists the security policies that are attached to your file transfer protocol-enabled servers.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidNextTokenException" },
        { "shape": "InvalidRequestException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "ListSecurityPoliciesRequest" },
      "name": "ListSecurityPolicies",
      "output": { "shape": "ListSecurityPoliciesResponse" }
    },
    "ListServers": {
      "documentation": "<p>Lists the file transfer protocol-enabled servers that are associated with your Amazon Web Services account.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidNextTokenException" },
        { "shape": "InvalidRequestException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "ListServersRequest" },
      "name": "ListServers",
      "output": { "shape": "ListServersResponse" }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify. The resource can be a user, server, or role.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidNextTokenException" },
        { "shape": "InvalidRequestException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "ListTagsForResourceRequest" },
      "name": "ListTagsForResource",
      "output": { "shape": "ListTagsForResourceResponse" }
    },
    "ListUsers": {
      "documentation": "<p>Lists the users for a file transfer protocol-enabled server that you specify by passing the <code>ServerId</code> parameter.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidNextTokenException" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "ListUsersRequest" },
      "name": "ListUsers",
      "output": { "shape": "ListUsersResponse" }
    },
    "ListWorkflows": {
      "documentation": "<p>Lists all of your workflows.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidNextTokenException" },
        { "shape": "InvalidRequestException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "ListWorkflowsRequest" },
      "name": "ListWorkflows",
      "output": { "shape": "ListWorkflowsResponse" }
    },
    "SendWorkflowStepState": {
      "documentation": "<p>Sends a callback for asynchronous custom steps.</p> <p> The <code>ExecutionId</code>, <code>WorkflowId</code>, and <code>Token</code> are passed to the target resource during execution of a custom step of a workflow. You must include those with their callback as well as providing a status. </p>",
      "errors": [
        { "shape": "AccessDeniedException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "SendWorkflowStepStateRequest" },
      "name": "SendWorkflowStepState",
      "output": { "shape": "SendWorkflowStepStateResponse" }
    },
    "StartServer": {
      "documentation": "<p>Changes the state of a file transfer protocol-enabled server from <code>OFFLINE</code> to <code>ONLINE</code>. It has no impact on a server that is already <code>ONLINE</code>. An <code>ONLINE</code> server can accept and process file transfer jobs.</p> <p>The state of <code>STARTING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "StartServerRequest" },
      "name": "StartServer"
    },
    "StopServer": {
      "documentation": "<p>Changes the state of a file transfer protocol-enabled server from <code>ONLINE</code> to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process file transfer jobs. Information tied to your server, such as server and user properties, are not affected by stopping your server.</p> <note> <p>Stopping the server will not reduce or impact your file transfer protocol endpoint billing; you must delete the server to stop being billed.</p> </note> <p>The state of <code>STOPPING</code> indicates that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code> can indicate an error condition.</p> <p>No response is returned from this call.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "StopServerRequest" },
      "name": "StopServer"
    },
    "TagResource": {
      "documentation": "<p>Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>There is no response returned from this call.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "TagResourceRequest" },
      "name": "TagResource"
    },
    "TestIdentityProvider": {
      "documentation": "<p>If the <code>IdentityProviderType</code> of a file transfer protocol-enabled server is <code>AWS_DIRECTORY_SERVICE</code> or <code>API_Gateway</code>, tests whether your identity provider is set up successfully. We highly recommend that you call this operation to test your authentication method as soon as you create your server. By doing so, you can troubleshoot issues with the identity provider integration to ensure that your users can successfully use the service.</p> <p> The <code>ServerId</code> and <code>UserName</code> parameters are required. The <code>ServerProtocol</code>, <code>SourceIp</code>, and <code>UserPassword</code> are all optional. </p> <note> <p> You cannot use <code>TestIdentityProvider</code> if the <code>IdentityProviderType</code> of your server is <code>SERVICE_MANAGED</code>. </p> </note> <ul> <li> <p> If you provide any incorrect values for any parameters, the <code>Response</code> field is empty. </p> </li> <li> <p> If you provide a server ID for a server that uses service-managed users, you get an error: </p> <p> <code> An error occurred (InvalidRequestException) when calling the TestIdentityProvider operation: s-<i>server-ID</i> not configured for external auth </code> </p> </li> <li> <p> If you enter a Server ID for the <code>--server-id</code> parameter that does not identify an actual Transfer server, you receive the following error: </p> <p> <code>An error occurred (ResourceNotFoundException) when calling the TestIdentityProvider operation: Unknown server</code> </p> </li> </ul>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "TestIdentityProviderRequest" },
      "name": "TestIdentityProvider",
      "output": { "shape": "TestIdentityProviderResponse" }
    },
    "UntagResource": {
      "documentation": "<p>Detaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.</p> <p>No response is returned from this call.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "UntagResourceRequest" },
      "name": "UntagResource"
    },
    "UpdateAccess": {
      "documentation": "<p>Allows you to update parameters for the access specified in the <code>ServerID</code> and <code>ExternalID</code> parameters.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceExistsException" },
        { "shape": "ResourceNotFoundException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "UpdateAccessRequest" },
      "name": "UpdateAccess",
      "output": { "shape": "UpdateAccessResponse" }
    },
    "UpdateServer": {
      "documentation": "<p>Updates the file transfer protocol-enabled server's properties after that server has been created.</p> <p>The <code>UpdateServer</code> call returns the <code>ServerId</code> of the server you updated.</p>",
      "errors": [
        { "shape": "AccessDeniedException" },
        { "shape": "ServiceUnavailableException" },
        { "shape": "ConflictException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceExistsException" },
        { "shape": "ResourceNotFoundException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "UpdateServerRequest" },
      "name": "UpdateServer",
      "output": { "shape": "UpdateServerResponse" }
    },
    "UpdateUser": {
      "documentation": "<p>Assigns new properties to a user. Parameters you pass modify any or all of the following: the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code> you specify.</p> <p>The response returns the <code>ServerId</code> and the <code>UserName</code> for the updated user.</p>",
      "errors": [
        { "shape": "ServiceUnavailableException" },
        { "shape": "InternalServiceError" },
        { "shape": "InvalidRequestException" },
        { "shape": "ResourceNotFoundException" },
        { "shape": "ThrottlingException" }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": { "shape": "UpdateUserRequest" },
      "name": "UpdateUser",
      "output": { "shape": "UpdateUserResponse" }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "exception": true,
      "members": {
        "Message": { "shape": "ServiceErrorMessage" }
      },
      "synthetic": true,
      "type": "structure"
    },
    "AddressAllocationId": { "type": "string" },
    "AddressAllocationIds": {
      "member": { "shape": "AddressAllocationId" },
      "type": "list"
    },
    "Arn": {
      "max": 1600,
      "min": 20,
      "pattern": "arn:.*",
      "type": "string"
    },
    "CallbackToken": {
      "max": 64,
      "min": 1,
      "pattern": "\\w+",
      "type": "string"
    },
    "Certificate": {
      "max": 1600,
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>This exception is thrown when the <code>UpdateServer</code> is called for a file transfer protocol-enabled server that has VPC as the endpoint type and the server's <code>VpcEndpointID</code> is not in the available state.</p>",
      "exception": true,
      "members": {
        "Message": { "shape": "Message" }
      },
      "required": ["Message"],
      "type": "structure"
    },
    "CopyStepDetails": {
      "documentation": "<p>Each step type has its own <code>StepDetails</code> structure.</p>",
      "members": {
        "DestinationFileLocation": {
          "documentation": "<p>Specifies the location for the file being copied. Only applicable for Copy type workflow steps. Use <code>${Transfer:username}</code> in this field to parametrize the destination prefix by username.</p>",
          "shape": "InputFileLocation"
        },
        "Name": {
          "documentation": "<p>The name of the step, used as an identifier.</p>",
          "shape": "WorkflowStepName"
        },
        "OverwriteExisting": {
          "documentation": "<p>A flag that indicates whether or not to overwrite an existing file of the same name. The default is <code>FALSE</code>.</p>",
          "shape": "OverwriteExisting"
        },
        "SourceFileLocation": {
          "documentation": "<p>Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow.</p> <ul> <li> <p>Enter <code>${previous.file}</code> to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value.</p> </li> <li> <p>Enter <code>${original.file}</code> to use the originally-uploaded file location as input for this step.</p> </li> </ul>",
          "shape": "SourceFileLocation"
        }
      },
      "type": "structure"
    },
    "CreateAccessRequest": {
      "members": {
        "ExternalId": {
          "documentation": "<p>A unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code> </p> <p>In that command, replace <i>YourGroupName</i> with the name of your Active Directory group.</p> <p>The regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-</p>",
          "shape": "ExternalId"
        },
        "HomeDirectory": {
          "documentation": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>",
          "shape": "HomeDirectory"
        },
        "HomeDirectoryMappings": {
          "documentation": "<p>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in <code>Target</code>. This value can only be set when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases, you can use this value instead of the session policy to lock down your user to the designated home directory (\"<code>chroot</code>\"). To do this, you can set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the <code>HomeDirectory</code> parameter value.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>",
          "shape": "HomeDirectoryMappings"
        },
        "HomeDirectoryType": {
          "documentation": "<p>The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or EFS paths visible to your users.</p>",
          "shape": "HomeDirectoryType"
        },
        "Policy": {
          "documentation": "<p>A session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p> <note> <p>This only applies when the domain of <code>ServerId</code> is S3. EFS does not use session policies.</p> <p>For session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p> <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html\">Example session policy</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\">AssumeRole</a> in the <i>Amazon Web Services Security Token Service API Reference</i>.</p> </note>",
          "shape": "Policy"
        },
        "PosixProfile": { "shape": "PosixProfile" },
        "Role": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.</p>",
          "shape": "Role"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server instance. This is the specific server that you added your user to.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["Role", "ServerId", "ExternalId"],
      "type": "structure"
    },
    "CreateAccessResponse": {
      "members": {
        "ExternalId": {
          "documentation": "<p>The external ID of the group whose users have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family.</p>",
          "shape": "ExternalId"
        },
        "ServerId": {
          "documentation": "<p>The ID of the server that the user is attached to.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId", "ExternalId"],
      "type": "structure"
    },
    "CreateServerRequest": {
      "members": {
        "Certificate": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Amazon Web Services Certificate Manager (ACM) certificate. Required when <code>Protocols</code> is set to <code>FTPS</code>.</p> <p>To request a new public certificate, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html\">Request a public certificate</a> in the <i> Amazon Web Services Certificate Manager User Guide</i>.</p> <p>To import an existing certificate into ACM, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing certificates into ACM</a> in the <i> Amazon Web Services Certificate Manager User Guide</i>.</p> <p>To request a private certificate to use FTPS through private IP addresses, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html\">Request a private certificate</a> in the <i> Amazon Web Services Certificate Manager User Guide</i>.</p> <p>Certificates with the following cryptographic algorithms and key sizes are supported:</p> <ul> <li> <p>2048-bit RSA (RSA_2048)</p> </li> <li> <p>4096-bit RSA (RSA_4096)</p> </li> <li> <p>Elliptic Prime Curve 256 bit (EC_prime256v1)</p> </li> <li> <p>Elliptic Prime Curve 384 bit (EC_secp384r1)</p> </li> <li> <p>Elliptic Prime Curve 521 bit (EC_secp521r1)</p> </li> </ul> <note> <p>The certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP address specified and information about the issuer.</p> </note>",
          "shape": "Certificate"
        },
        "Domain": {
          "documentation": "<p>The domain of the storage system that is used for file transfers. There are two domains available: Amazon Simple Storage Service (Amazon S3) and Amazon Elastic File System (Amazon EFS). The default value is S3.</p> <note> <p>After the server is created, the domain cannot be changed.</p> </note>",
          "shape": "Domain"
        },
        "EndpointDetails": {
          "documentation": "<p>The virtual private cloud (VPC) endpoint settings that are configured for your server. When you host your endpoint within your VPC, you can make it accessible only to resources within your VPC, or you can attach Elastic IP addresses and make it accessible to clients over the internet. Your VPC's default security groups are automatically assigned to your endpoint.</p>",
          "shape": "EndpointDetails"
        },
        "EndpointType": {
          "documentation": "<p>The type of endpoint that you want your server to use. You can choose to make your server's endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an endpoint that is hosted in a VPC, you can restrict access to your server and resources only within your VPC or choose to make it internet facing by attaching Elastic IP addresses directly to it.</p> <note> <p> After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Services account if your account hasn't already done so before May 19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Services account on or before May 19, 2021, you will not be affected. After this date, use <code>EndpointType</code>=<code>VPC</code>.</p> <p>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p> <p>It is recommended that you use <code>VPC</code> as the <code>EndpointType</code>. With this endpoint type, you have the option to directly associate up to three Elastic IPv4 addresses (BYO IP included) with your server's endpoint and use VPC security groups to restrict traffic by the client's public IP address. This is not possible with <code>EndpointType</code> set to <code>VPC_ENDPOINT</code>.</p> </note>",
          "shape": "EndpointType"
        },
        "HostKey": {
          "documentation": "<p>The RSA private key as generated by the <code>ssh-keygen -N \"\" -m PEM -f my-new-server-key</code> command.</p> <important> <p>If you aren't planning to migrate existing users from an existing SFTP-enabled server to a new server, don't update the host key. Accidentally changing a server's host key can be disruptive.</p> </important> <p>For more information, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/edit-server-config.html#configuring-servers-change-host-key\">Change the host key for your SFTP-enabled server</a> in the <i>Amazon Web Services Transfer Family User Guide</i>.</p>",
          "shape": "HostKey"
        },
        "IdentityProviderDetails": {
          "documentation": "<p>Required when <code>IdentityProviderType</code> is set to <code>AWS_DIRECTORY_SERVICE</code> or <code>API_GATEWAY</code>. Accepts an array containing all of the information required to use a directory in <code>AWS_DIRECTORY_SERVICE</code> or invoke a customer-supplied authentication API, including the API Gateway URL. Not required when <code>IdentityProviderType</code> is set to <code>SERVICE_MANAGED</code>.</p>",
          "shape": "IdentityProviderDetails"
        },
        "IdentityProviderType": {
          "documentation": "<p>Specifies the mode of authentication for a server. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access user credentials within the Amazon Web Services Transfer Family service.</p> <p>Use <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory groups in Amazon Web Services Managed Active Directory or Microsoft Active Directory in your on-premises environment or in Amazon Web Services using AD Connectors. This option also requires you to provide a Directory ID using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use the <code>API_GATEWAY</code> value to integrate with an identity provider of your choosing. The <code>API_GATEWAY</code> setting requires you to provide an API Gateway endpoint URL to call for authentication using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use the <code>AWS_LAMBDA</code> value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the <code>Function</code> parameter for the <code>IdentityProviderDetails</code> data type.</p>",
          "shape": "IdentityProviderType"
        },
        "LoggingRole": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.</p>",
          "shape": "Role"
        },
        "PostAuthenticationLoginBanner": {
          "documentation": "<p>Specify a string to display when users connect to a server. This string is displayed after the user authenticates.</p> <note> <p>The SFTP protocol does not support post-authentication display banners.</p> </note>",
          "shape": "PostAuthenticationLoginBanner"
        },
        "PreAuthenticationLoginBanner": {
          "documentation": "<p>Specify a string to display when users connect to a server. This string is displayed before the user authenticates. For example, the following banner displays details about using the system.</p> <p> <code>This system is for the use of authorized users only. Individuals using this computer system without authority, or in excess of their authority, are subject to having all of their activities on this system monitored and recorded by system personnel.</code> </p>",
          "shape": "PreAuthenticationLoginBanner"
        },
        "ProtocolDetails": {
          "documentation": "<p>The protocol settings that are configured for your server.</p> <ul> <li> <p> Use the <code>PassiveIp</code> parameter to indicate passive mode (for FTP and FTPS protocols). Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer. </p> </li> <li> <p>Use the <code>SetStatOption</code> to ignore the error that is generated when the client attempts to use SETSTAT on a file you are uploading to an S3 bucket. Set the value to <code>ENABLE_NO_OP</code> to have the Transfer Family server ignore the SETSTAT command, and upload files without needing to make any changes to your SFTP client. Note that with <code>SetStatOption</code> set to <code>ENABLE_NO_OP</code>, Transfer generates a log entry to CloudWatch Logs, so you can determine when the client is making a SETSTAT call.</p> </li> <li> <p>Use the <code>TlsSessionResumptionMode</code> parameter to determine whether or not your Transfer server resumes recent, negotiated sessions through a unique session ID.</p> </li> </ul>",
          "shape": "ProtocolDetails"
        },
        "Protocols": {
          "documentation": "<p>Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. The available protocols are:</p> <ul> <li> <p> <code>SFTP</code> (Secure Shell (SSH) File Transfer Protocol): File transfer over SSH</p> </li> <li> <p> <code>FTPS</code> (File Transfer Protocol Secure): File transfer with TLS encryption</p> </li> <li> <p> <code>FTP</code> (File Transfer Protocol): Unencrypted file transfer</p> </li> </ul> <note> <p>If you select <code>FTPS</code>, you must choose a certificate stored in Amazon Web Services Certificate Manager (ACM) which is used to identify your server when clients connect to it over FTPS.</p> <p>If <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>, then the <code>EndpointType</code> must be <code>VPC</code> and the <code>IdentityProviderType</code> must be <code>AWS_DIRECTORY_SERVICE</code> or <code>API_GATEWAY</code>.</p> <p>If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code> cannot be associated.</p> <p>If <code>Protocol</code> is set only to <code>SFTP</code>, the <code>EndpointType</code> can be set to <code>PUBLIC</code> and the <code>IdentityProviderType</code> can be set to <code>SERVICE_MANAGED</code>.</p> </note>",
          "shape": "Protocols"
        },
        "SecurityPolicyName": {
          "documentation": "<p>Specifies the name of the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyName"
        },
        "Tags": {
          "documentation": "<p>Key-value pairs that can be used to group and search for servers.</p>",
          "shape": "Tags"
        },
        "WorkflowDetails": {
          "documentation": "<p>Specifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.</p>",
          "shape": "WorkflowDetails"
        }
      },
      "type": "structure"
    },
    "CreateServerResponse": {
      "members": {
        "ServerId": {
          "documentation": "<p>The service-assigned ID of the server that is created.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "CreateUserRequest": {
      "members": {
        "HomeDirectory": {
          "documentation": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>",
          "shape": "HomeDirectory"
        },
        "HomeDirectoryMappings": {
          "documentation": "<p>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in <code>Target</code>. This value can only be set when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases, you can use this value instead of the session policy to lock your user down to the designated home directory (\"<code>chroot</code>\"). To do this, you can set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the HomeDirectory parameter value.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>",
          "shape": "HomeDirectoryMappings"
        },
        "HomeDirectoryType": {
          "documentation": "<p>The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or EFS paths visible to your users.</p>",
          "shape": "HomeDirectoryType"
        },
        "Policy": {
          "documentation": "<p>A session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p> <note> <p>This only applies when the domain of <code>ServerId</code> is S3. EFS does not use session policies.</p> <p>For session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p> <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html\">Example session policy</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\">AssumeRole</a> in the <i>Amazon Web Services Security Token Service API Reference</i>.</p> </note>",
          "shape": "Policy"
        },
        "PosixProfile": {
          "documentation": "<p>Specifies the full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users' access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in Amazon EFS determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.</p>",
          "shape": "PosixProfile"
        },
        "Role": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.</p>",
          "shape": "Role"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server instance. This is the specific server that you added your user to.</p>",
          "shape": "ServerId"
        },
        "SshPublicKeyBody": {
          "documentation": "<p>The public portion of the Secure Shell (SSH) key used to authenticate the user to the server.</p> <note> <p> Currently, Transfer Family does not accept elliptical curve keys (keys beginning with <code>ecdsa</code>). </p> </note>",
          "shape": "SshPublicKeyBody"
        },
        "Tags": {
          "documentation": "<p>Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.</p>",
          "shape": "Tags"
        },
        "UserName": {
          "documentation": "<p>A unique string that identifies a user and is associated with a <code>ServerId</code>. This user name must be a minimum of 3 and a maximum of 100 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period '.', and at sign '@'. The user name can't start with a hyphen, period, or at sign.</p>",
          "shape": "UserName"
        }
      },
      "required": ["Role", "ServerId", "UserName"],
      "type": "structure"
    },
    "CreateUserResponse": {
      "members": {
        "ServerId": {
          "documentation": "<p>The ID of the server that the user is attached to.</p>",
          "shape": "ServerId"
        },
        "UserName": {
          "documentation": "<p>A unique string that identifies a user account associated with a server.</p>",
          "shape": "UserName"
        }
      },
      "required": ["ServerId", "UserName"],
      "type": "structure"
    },
    "CreateWorkflowRequest": {
      "members": {
        "Description": {
          "documentation": "<p>A textual description for the workflow.</p>",
          "shape": "WorkflowDescription"
        },
        "OnExceptionSteps": {
          "documentation": "<p>Specifies the steps (actions) to take if errors are encountered during execution of the workflow.</p> <note> <p>For custom steps, the lambda function needs to send <code>FAILURE</code> to the call back API to kick off the exception steps. Additionally, if the lambda does not send <code>SUCCESS</code> before it times out, the exception steps are executed.</p> </note>",
          "shape": "WorkflowSteps"
        },
        "Steps": {
          "documentation": "<p>Specifies the details for the steps that are in the specified workflow.</p> <p> The <code>TYPE</code> specifies which of the following actions is being taken for this step. </p> <ul> <li> <p> <i>COPY</i>: copy the file to another location</p> </li> <li> <p> <i>CUSTOM</i>: custom step with a lambda target</p> </li> <li> <p> <i>DELETE</i>: delete the file</p> </li> <li> <p> <i>TAG</i>: add a tag to the file</p> </li> </ul> <note> <p> Currently, copying and tagging are supported only on S3. </p> </note> <p> For file location, you specify either the S3 bucket and key, or the EFS filesystem ID and path. </p>",
          "shape": "WorkflowSteps"
        },
        "Tags": {
          "documentation": "<p>Key-value pairs that can be used to group and search for workflows. Tags are metadata attached to workflows for any purpose.</p>",
          "shape": "Tags"
        }
      },
      "required": ["Steps"],
      "type": "structure"
    },
    "CreateWorkflowResponse": {
      "members": {
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["WorkflowId"],
      "type": "structure"
    },
    "CustomStepDetails": {
      "documentation": "<p>Each step type has its own <code>StepDetails</code> structure.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the step, used as an identifier.</p>",
          "shape": "WorkflowStepName"
        },
        "SourceFileLocation": {
          "documentation": "<p>Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow.</p> <ul> <li> <p>Enter <code>${previous.file}</code> to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value.</p> </li> <li> <p>Enter <code>${original.file}</code> to use the originally-uploaded file location as input for this step.</p> </li> </ul>",
          "shape": "SourceFileLocation"
        },
        "Target": {
          "documentation": "<p>The ARN for the lambda function that is being called.</p>",
          "shape": "CustomStepTarget"
        },
        "TimeoutSeconds": {
          "documentation": "<p>Timeout, in seconds, for the step.</p>",
          "shape": "CustomStepTimeoutSeconds"
        }
      },
      "type": "structure"
    },
    "CustomStepStatus": {
      "enum": ["SUCCESS", "FAILURE"],
      "type": "string"
    },
    "CustomStepTarget": {
      "max": 170,
      "pattern": "arn:[a-z-]+:lambda:.*$",
      "type": "string"
    },
    "CustomStepTimeoutSeconds": {
      "max": 1800,
      "min": 1,
      "type": "integer"
    },
    "DateImported": { "type": "timestamp" },
    "DeleteAccessRequest": {
      "members": {
        "ExternalId": {
          "documentation": "<p>A unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code> </p> <p>In that command, replace <i>YourGroupName</i> with the name of your Active Directory group.</p> <p>The regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-</p>",
          "shape": "ExternalId"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that has this user assigned.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId", "ExternalId"],
      "type": "structure"
    },
    "DeleteServerRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A unique system-assigned identifier for a server instance.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "DeleteSshPublicKeyRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a file transfer protocol-enabled server instance that has the user assigned to it.</p>",
          "shape": "ServerId"
        },
        "SshPublicKeyId": {
          "documentation": "<p>A unique identifier used to reference your user's specific SSH key.</p>",
          "shape": "SshPublicKeyId"
        },
        "UserName": {
          "documentation": "<p>A unique string that identifies a user whose public key is being deleted.</p>",
          "shape": "UserName"
        }
      },
      "required": ["ServerId", "SshPublicKeyId", "UserName"],
      "type": "structure"
    },
    "DeleteStepDetails": {
      "documentation": "<p>The name of the step, used to identify the delete step.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the step, used as an identifier.</p>",
          "shape": "WorkflowStepName"
        },
        "SourceFileLocation": {
          "documentation": "<p>Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow.</p> <ul> <li> <p>Enter <code>${previous.file}</code> to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value.</p> </li> <li> <p>Enter <code>${original.file}</code> to use the originally-uploaded file location as input for this step.</p> </li> </ul>",
          "shape": "SourceFileLocation"
        }
      },
      "type": "structure"
    },
    "DeleteUserRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server instance that has the user assigned to it.</p>",
          "shape": "ServerId"
        },
        "UserName": {
          "documentation": "<p>A unique string that identifies a user that is being deleted from a server.</p>",
          "shape": "UserName"
        }
      },
      "required": ["ServerId", "UserName"],
      "type": "structure"
    },
    "DeleteWorkflowRequest": {
      "members": {
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["WorkflowId"],
      "type": "structure"
    },
    "DescribeAccessRequest": {
      "members": {
        "ExternalId": {
          "documentation": "<p>A unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code> </p> <p>In that command, replace <i>YourGroupName</i> with the name of your Active Directory group.</p> <p>The regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-</p>",
          "shape": "ExternalId"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that has this access assigned.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId", "ExternalId"],
      "type": "structure"
    },
    "DescribeAccessResponse": {
      "members": {
        "Access": {
          "documentation": "<p>The external ID of the server that the access is attached to.</p>",
          "shape": "DescribedAccess"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that has this access assigned.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId", "Access"],
      "type": "structure"
    },
    "DescribeExecutionRequest": {
      "members": {
        "ExecutionId": {
          "documentation": "<p>A unique identifier for the execution of a workflow.</p>",
          "shape": "ExecutionId"
        },
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["ExecutionId", "WorkflowId"],
      "type": "structure"
    },
    "DescribeExecutionResponse": {
      "members": {
        "Execution": {
          "documentation": "<p>The structure that contains the details of the workflow' execution.</p>",
          "shape": "DescribedExecution"
        },
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["WorkflowId", "Execution"],
      "type": "structure"
    },
    "DescribeSecurityPolicyRequest": {
      "members": {
        "SecurityPolicyName": {
          "documentation": "<p>Specifies the name of the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyName"
        }
      },
      "required": ["SecurityPolicyName"],
      "type": "structure"
    },
    "DescribeSecurityPolicyResponse": {
      "members": {
        "SecurityPolicy": {
          "documentation": "<p>An array containing the properties of the security policy.</p>",
          "shape": "DescribedSecurityPolicy"
        }
      },
      "required": ["SecurityPolicy"],
      "type": "structure"
    },
    "DescribeServerRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "DescribeServerResponse": {
      "members": {
        "Server": {
          "documentation": "<p>An array containing the properties of a server with the <code>ServerID</code> you specified.</p>",
          "shape": "DescribedServer"
        }
      },
      "required": ["Server"],
      "type": "structure"
    },
    "DescribeUserRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that has this user assigned.</p>",
          "shape": "ServerId"
        },
        "UserName": {
          "documentation": "<p>The name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the Amazon Web Services Transfer Family service and perform file transfer tasks.</p>",
          "shape": "UserName"
        }
      },
      "required": ["ServerId", "UserName"],
      "type": "structure"
    },
    "DescribeUserResponse": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that has this user assigned.</p>",
          "shape": "ServerId"
        },
        "User": {
          "documentation": "<p>An array containing the properties of the user account for the <code>ServerID</code> value that you specified.</p>",
          "shape": "DescribedUser"
        }
      },
      "required": ["ServerId", "User"],
      "type": "structure"
    },
    "DescribeWorkflowRequest": {
      "members": {
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["WorkflowId"],
      "type": "structure"
    },
    "DescribeWorkflowResponse": {
      "members": {
        "Workflow": {
          "documentation": "<p>The structure that contains the details of the workflow.</p>",
          "shape": "DescribedWorkflow"
        }
      },
      "required": ["Workflow"],
      "type": "structure"
    },
    "DescribedAccess": {
      "documentation": "<p>Describes the properties of the access that was specified.</p>",
      "members": {
        "ExternalId": {
          "documentation": "<p>A unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code> </p> <p>In that command, replace <i>YourGroupName</i> with the name of your Active Directory group.</p> <p>The regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-</p>",
          "shape": "ExternalId"
        },
        "HomeDirectory": {
          "documentation": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>",
          "shape": "HomeDirectory"
        },
        "HomeDirectoryMappings": {
          "documentation": "<p>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in <code>Target</code>. This value can only be set when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p> <p>In most cases, you can use this value instead of the session policy to lock down the associated access to the designated home directory (\"<code>chroot</code>\"). To do this, you can set <code>Entry</code> to '/' and set <code>Target</code> to the <code>HomeDirectory</code> parameter value.</p>",
          "shape": "HomeDirectoryMappings"
        },
        "HomeDirectoryType": {
          "documentation": "<p>The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or EFS paths visible to your users.</p>",
          "shape": "HomeDirectoryType"
        },
        "Policy": {
          "documentation": "<p>A session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
          "shape": "Policy"
        },
        "PosixProfile": { "shape": "PosixProfile" },
        "Role": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.</p>",
          "shape": "Role"
        }
      },
      "type": "structure"
    },
    "DescribedExecution": {
      "documentation": "<p>The details for an execution object.</p>",
      "members": {
        "ExecutionId": {
          "documentation": "<p>A unique identifier for the execution of a workflow.</p>",
          "shape": "ExecutionId"
        },
        "ExecutionRole": {
          "documentation": "<p>The IAM role associated with the execution.</p>",
          "shape": "Role"
        },
        "InitialFileLocation": {
          "documentation": "<p>A structure that describes the Amazon S3 or EFS file location. This is the file location when the execution begins: if the file is being copied, this is the initial (as opposed to destination) file location.</p>",
          "shape": "FileLocation"
        },
        "LoggingConfiguration": {
          "documentation": "<p>The IAM logging role associated with the execution.</p>",
          "shape": "LoggingConfiguration"
        },
        "PosixProfile": { "shape": "PosixProfile" },
        "Results": {
          "documentation": "<p>A structure that describes the execution results. This includes a list of the steps along with the details of each step, error type and message (if any), and the <code>OnExceptionSteps</code> structure.</p>",
          "shape": "ExecutionResults"
        },
        "ServiceMetadata": {
          "documentation": "<p>A container object for the session details associated with a workflow.</p>",
          "shape": "ServiceMetadata"
        },
        "Status": {
          "documentation": "<p>The status is one of the execution. Can be in progress, completed, exception encountered, or handling the exception. </p>",
          "shape": "ExecutionStatus"
        }
      },
      "type": "structure"
    },
    "DescribedSecurityPolicy": {
      "documentation": "<p>Describes the properties of a security policy that was specified. For more information about security policies, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html\">Working with security policies</a>.</p>",
      "members": {
        "Fips": {
          "documentation": "<p>Specifies whether this policy enables Federal Information Processing Standards (FIPS).</p>",
          "shape": "Fips"
        },
        "SecurityPolicyName": {
          "documentation": "<p>Specifies the name of the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyName"
        },
        "SshCiphers": {
          "documentation": "<p>Specifies the enabled Secure Shell (SSH) cipher encryption algorithms in the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyOptions"
        },
        "SshKexs": {
          "documentation": "<p>Specifies the enabled SSH key exchange (KEX) encryption algorithms in the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyOptions"
        },
        "SshMacs": {
          "documentation": "<p>Specifies the enabled SSH message authentication code (MAC) encryption algorithms in the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyOptions"
        },
        "TlsCiphers": {
          "documentation": "<p>Specifies the enabled Transport Layer Security (TLS) cipher encryption algorithms in the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyOptions"
        }
      },
      "required": ["SecurityPolicyName"],
      "type": "structure"
    },
    "DescribedServer": {
      "documentation": "<p>Describes the properties of a file transfer protocol-enabled server that was specified.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>Specifies the unique Amazon Resource Name (ARN) of the server.</p>",
          "shape": "Arn"
        },
        "Certificate": {
          "documentation": "<p>Specifies the ARN of the Amazon Web ServicesCertificate Manager (ACM) certificate. Required when <code>Protocols</code> is set to <code>FTPS</code>.</p>",
          "shape": "Certificate"
        },
        "Domain": {
          "documentation": "<p>Specifies the domain of the storage system that is used for file transfers.</p>",
          "shape": "Domain"
        },
        "EndpointDetails": {
          "documentation": "<p>The virtual private cloud (VPC) endpoint settings that are configured for your server. When you host your endpoint within your VPC, you can make it accessible only to resources within your VPC, or you can attach Elastic IP addresses and make it accessible to clients over the internet. Your VPC's default security groups are automatically assigned to your endpoint.</p>",
          "shape": "EndpointDetails"
        },
        "EndpointType": {
          "documentation": "<p>Defines the type of endpoint that your server is connected to. If your server is connected to a VPC endpoint, your server isn't accessible over the public internet.</p>",
          "shape": "EndpointType"
        },
        "HostKeyFingerprint": {
          "documentation": "<p>Specifies the Base64-encoded SHA256 fingerprint of the server's host key. This value is equivalent to the output of the <code>ssh-keygen -l -f my-new-server-key</code> command.</p>",
          "shape": "HostKeyFingerprint"
        },
        "IdentityProviderDetails": {
          "documentation": "<p>Specifies information to call a customer-supplied authentication API. This field is not populated when the <code>IdentityProviderType</code> of a server is <code>AWS_DIRECTORY_SERVICE</code> or <code>SERVICE_MANAGED</code>.</p>",
          "shape": "IdentityProviderDetails"
        },
        "IdentityProviderType": {
          "documentation": "<p>Specifies the mode of authentication for a server. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access user credentials within the Amazon Web Services Transfer Family service.</p> <p>Use <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory groups in Amazon Web Services Managed Active Directory or Microsoft Active Directory in your on-premises environment or in Amazon Web Services using AD Connectors. This option also requires you to provide a Directory ID using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use the <code>API_GATEWAY</code> value to integrate with an identity provider of your choosing. The <code>API_GATEWAY</code> setting requires you to provide an API Gateway endpoint URL to call for authentication using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use the <code>AWS_LAMBDA</code> value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the <code>Function</code> parameter for the <code>IdentityProviderDetails</code> data type.</p>",
          "shape": "IdentityProviderType"
        },
        "LoggingRole": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.</p>",
          "shape": "Role"
        },
        "PostAuthenticationLoginBanner": {
          "documentation": "<p>Specify a string to display when users connect to a server. This string is displayed after the user authenticates.</p> <note> <p>The SFTP protocol does not support post-authentication display banners.</p> </note>",
          "shape": "PostAuthenticationLoginBanner"
        },
        "PreAuthenticationLoginBanner": {
          "documentation": "<p>Specify a string to display when users connect to a server. This string is displayed before the user authenticates. For example, the following banner displays details about using the system.</p> <p> <code>This system is for the use of authorized users only. Individuals using this computer system without authority, or in excess of their authority, are subject to having all of their activities on this system monitored and recorded by system personnel.</code> </p>",
          "shape": "PreAuthenticationLoginBanner"
        },
        "ProtocolDetails": {
          "documentation": "<p> The protocol settings that are configured for your server. </p> <p> Use the <code>PassiveIp</code> parameter to indicate passive mode. Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer. </p>",
          "shape": "ProtocolDetails"
        },
        "Protocols": {
          "documentation": "<p>Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. The available protocols are:</p> <ul> <li> <p> <code>SFTP</code> (Secure Shell (SSH) File Transfer Protocol): File transfer over SSH</p> </li> <li> <p> <code>FTPS</code> (File Transfer Protocol Secure): File transfer with TLS encryption</p> </li> <li> <p> <code>FTP</code> (File Transfer Protocol): Unencrypted file transfer</p> </li> </ul>",
          "shape": "Protocols"
        },
        "SecurityPolicyName": {
          "documentation": "<p>Specifies the name of the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyName"
        },
        "ServerId": {
          "documentation": "<p>Specifies the unique system-assigned identifier for a server that you instantiate.</p>",
          "shape": "ServerId"
        },
        "State": {
          "documentation": "<p>Specifies the condition of a server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
          "shape": "State"
        },
        "Tags": {
          "documentation": "<p>Specifies the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.</p>",
          "shape": "Tags"
        },
        "UserCount": {
          "documentation": "<p>Specifies the number of users that are assigned to a server you specified with the <code>ServerId</code>.</p>",
          "shape": "UserCount"
        },
        "WorkflowDetails": {
          "documentation": "<p>Specifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.</p>",
          "shape": "WorkflowDetails"
        }
      },
      "required": ["Arn"],
      "type": "structure"
    },
    "DescribedUser": {
      "documentation": "<p>Describes the properties of a user that was specified.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>Specifies the unique Amazon Resource Name (ARN) for the user that was requested to be described.</p>",
          "shape": "Arn"
        },
        "HomeDirectory": {
          "documentation": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>",
          "shape": "HomeDirectory"
        },
        "HomeDirectoryMappings": {
          "documentation": "<p>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in <code>Target</code>. This value can only be set when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p> <p>In most cases, you can use this value instead of the session policy to lock your user down to the designated home directory (\"<code>chroot</code>\"). To do this, you can set <code>Entry</code> to '/' and set <code>Target</code> to the HomeDirectory parameter value.</p>",
          "shape": "HomeDirectoryMappings"
        },
        "HomeDirectoryType": {
          "documentation": "<p>The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or EFS paths visible to your users.</p>",
          "shape": "HomeDirectoryType"
        },
        "Policy": {
          "documentation": "<p>A session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p>",
          "shape": "Policy"
        },
        "PosixProfile": {
          "documentation": "<p>Specifies the full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users' access to your Amazon Elastic File System (Amazon EFS) file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.</p>",
          "shape": "PosixProfile"
        },
        "Role": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.</p>",
          "shape": "Role"
        },
        "SshPublicKeys": {
          "documentation": "<p>Specifies the public key portion of the Secure Shell (SSH) keys stored for the described user.</p>",
          "shape": "SshPublicKeys"
        },
        "Tags": {
          "documentation": "<p>Specifies the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.</p>",
          "shape": "Tags"
        },
        "UserName": {
          "documentation": "<p>Specifies the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your server.</p>",
          "shape": "UserName"
        }
      },
      "required": ["Arn"],
      "type": "structure"
    },
    "DescribedWorkflow": {
      "documentation": "<p>Describes the properties of the specified workflow</p>",
      "members": {
        "Arn": {
          "documentation": "<p>Specifies the unique Amazon Resource Name (ARN) for the workflow.</p>",
          "shape": "Arn"
        },
        "Description": {
          "documentation": "<p>Specifies the text description for the workflow.</p>",
          "shape": "WorkflowDescription"
        },
        "OnExceptionSteps": {
          "documentation": "<p>Specifies the steps (actions) to take if errors are encountered during execution of the workflow.</p>",
          "shape": "WorkflowSteps"
        },
        "Steps": {
          "documentation": "<p>Specifies the details for the steps that are in the specified workflow.</p>",
          "shape": "WorkflowSteps"
        },
        "Tags": {
          "documentation": "<p>Key-value pairs that can be used to group and search for workflows. Tags are metadata attached to workflows for any purpose.</p>",
          "shape": "Tags"
        },
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["Arn"],
      "type": "structure"
    },
    "DirectoryId": {
      "max": 12,
      "min": 12,
      "pattern": "^d-[0-9a-f]{10}$",
      "type": "string"
    },
    "Domain": {
      "enum": ["S3", "EFS"],
      "type": "string"
    },
    "EfsFileLocation": {
      "documentation": "<p>Reserved for future use.</p> <p> </p>",
      "members": {
        "FileSystemId": {
          "documentation": "<p>The ID of the file system, assigned by Amazon EFS.</p>",
          "shape": "EfsFileSystemId"
        },
        "Path": {
          "documentation": "<p>The pathname for the folder being used by a workflow.</p>",
          "shape": "EfsPath"
        }
      },
      "type": "structure"
    },
    "EfsFileSystemId": {
      "max": 128,
      "pattern": "^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$",
      "type": "string"
    },
    "EfsPath": {
      "max": 65536,
      "min": 1,
      "pattern": "^[^\\x00]+$",
      "type": "string"
    },
    "EndpointDetails": {
      "documentation": "<p>The virtual private cloud (VPC) endpoint settings that are configured for your file transfer protocol-enabled server. With a VPC endpoint, you can restrict access to your server and resources only within your VPC. To control incoming internet traffic, invoke the <code>UpdateServer</code> API and attach an Elastic IP address to your server's endpoint.</p> <note> <p> After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Servicesaccount if your account hasn't already done so before May 19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Servicesaccount on or before May 19, 2021, you will not be affected. After this date, use <code>EndpointType</code>=<code>VPC</code>.</p> <p>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p> </note>",
      "members": {
        "AddressAllocationIds": {
          "documentation": "<p>A list of address allocation IDs that are required to attach an Elastic IP address to your server's endpoint.</p> <note> <p>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code> and it is only valid in the <code>UpdateServer</code> API.</p> </note>",
          "shape": "AddressAllocationIds"
        },
        "SecurityGroupIds": {
          "documentation": "<p>A list of security groups IDs that are available to attach to your server's endpoint.</p> <note> <p>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</p> <p>You can edit the <code>SecurityGroupIds</code> property in the <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/API_UpdateServer.html\">UpdateServer</a> API only if you are changing the <code>EndpointType</code> from <code>PUBLIC</code> or <code>VPC_ENDPOINT</code> to <code>VPC</code>. To change security groups associated with your server's VPC endpoint after creation, use the Amazon EC2 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html\">ModifyVpcEndpoint</a> API.</p> </note>",
          "shape": "SecurityGroupIds"
        },
        "SubnetIds": {
          "documentation": "<p>A list of subnet IDs that are required to host your server endpoint in your VPC.</p> <note> <p>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</p> </note>",
          "shape": "SubnetIds"
        },
        "VpcEndpointId": {
          "documentation": "<p>The ID of the VPC endpoint.</p> <note> <p>This property can only be set when <code>EndpointType</code> is set to <code>VPC_ENDPOINT</code>.</p> <p>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p> </note>",
          "shape": "VpcEndpointId"
        },
        "VpcId": {
          "documentation": "<p>The VPC ID of the VPC in which a server's endpoint will be hosted.</p> <note> <p>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</p> </note>",
          "shape": "VpcId"
        }
      },
      "type": "structure"
    },
    "EndpointType": {
      "enum": ["PUBLIC", "VPC", "VPC_ENDPOINT"],
      "type": "string"
    },
    "ExecutionError": {
      "documentation": "<p>Specifies the error message and type, for an error that occurs during the execution of the workflow.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Specifies the descriptive message that corresponds to the <code>ErrorType</code>.</p>",
          "shape": "ExecutionErrorMessage"
        },
        "Type": {
          "documentation": "<p>Specifies the error type.</p> <ul> <li> <p> <code>ALREADY_EXISTS</code>: occurs for a copy step, if the overwrite option is not selected and a file with the same name already exists in the target location.</p> </li> <li> <p> <code>BAD_REQUEST</code>: a general bad request: for example, a step that attempts to tag an EFS file returns <code>BAD_REQUEST</code>, as only S3 files can be tagged.</p> </li> <li> <p> <code>CUSTOM_STEP_FAILED</code>: occurs when the custom step provided a callback that indicates failure.</p> </li> <li> <p> <code>INTERNAL_SERVER_ERROR</code>: a catch-all error that can occur for a variety of reasons.</p> </li> <li> <p> <code>NOT_FOUND</code>: occurs when a requested entity, for example a source file for a copy step, does not exist.</p> </li> <li> <p> <code>PERMISSION_DENIED</code>: occurs if your policy does not contain the correct permissions to complete one or more of the steps in the workflow.</p> </li> <li> <p> <code>TIMEOUT</code>: occurs when the execution times out.</p> <note> <p> You can set the <code>TimeoutSeconds</code> for a custom step, anywhere from 1 second to 1800 seconds (30 minutes). </p> </note> </li> <li> <p> <code>THROTTLED</code>: occurs if you exceed the new execution refill rate of one workflow per second.</p> </li> </ul>",
          "shape": "ExecutionErrorType"
        }
      },
      "required": ["Type", "Message"],
      "type": "structure"
    },
    "ExecutionErrorMessage": { "type": "string" },
    "ExecutionErrorType": {
      "enum": [
        "PERMISSION_DENIED",
        "CUSTOM_STEP_FAILED",
        "THROTTLED",
        "ALREADY_EXISTS",
        "NOT_FOUND",
        "BAD_REQUEST",
        "TIMEOUT",
        "INTERNAL_SERVER_ERROR"
      ],
      "type": "string"
    },
    "ExecutionId": {
      "max": 36,
      "min": 36,
      "pattern": "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
      "type": "string"
    },
    "ExecutionResults": {
      "documentation": "<p>Specifies the steps in the workflow, as well as the steps to execute in case of any errors during workflow execution.</p>",
      "members": {
        "OnExceptionSteps": {
          "documentation": "<p>Specifies the steps (actions) to take if errors are encountered during execution of the workflow.</p>",
          "shape": "ExecutionStepResults"
        },
        "Steps": {
          "documentation": "<p>Specifies the details for the steps that are in the specified workflow.</p>",
          "shape": "ExecutionStepResults"
        }
      },
      "type": "structure"
    },
    "ExecutionStatus": {
      "enum": ["IN_PROGRESS", "COMPLETED", "EXCEPTION", "HANDLING_EXCEPTION"],
      "type": "string"
    },
    "ExecutionStepResult": {
      "documentation": "<p>Specifies the following details for the step: error (if any), outputs (if any), and the step type.</p>",
      "members": {
        "Error": {
          "documentation": "<p>Specifies the details for an error, if it occurred during execution of the specified workfow step.</p>",
          "shape": "ExecutionError"
        },
        "Outputs": {
          "documentation": "<p>The values for the key/value pair applied as a tag to the file. Only applicable if the step type is <code>TAG</code>.</p>",
          "shape": "StepResultOutputsJson"
        },
        "StepType": {
          "documentation": "<p>One of the available step types.</p> <ul> <li> <p> <i>COPY</i>: copy the file to another location</p> </li> <li> <p> <i>CUSTOM</i>: custom step with a lambda target</p> </li> <li> <p> <i>DELETE</i>: delete the file</p> </li> <li> <p> <i>TAG</i>: add a tag to the file</p> </li> </ul>",
          "shape": "WorkflowStepType"
        }
      },
      "type": "structure"
    },
    "ExecutionStepResults": {
      "max": 50,
      "member": { "shape": "ExecutionStepResult" },
      "min": 1,
      "type": "list"
    },
    "ExternalId": {
      "max": 256,
      "min": 1,
      "pattern": "^S-1-[\\d-]+$",
      "type": "string"
    },
    "FileLocation": {
      "documentation": "<p>Specifies the Amazon S3 or EFS file details to be used in the step.</p>",
      "members": {
        "EfsFileLocation": {
          "documentation": "<p>Specifies the Amazon EFS ID and the path for the file being used.</p>",
          "shape": "EfsFileLocation"
        },
        "S3FileLocation": {
          "documentation": "<p>Specifies the S3 details for the file being used, such as bucket, Etag, and so forth.</p>",
          "shape": "S3FileLocation"
        }
      },
      "type": "structure"
    },
    "Fips": { "type": "boolean" },
    "Function": {
      "max": 170,
      "min": 1,
      "pattern": "^arn:[a-z-]+:lambda:.*$",
      "type": "string"
    },
    "HomeDirectory": {
      "max": 1024,
      "pattern": "^$|/.*",
      "type": "string"
    },
    "HomeDirectoryMapEntry": {
      "documentation": "<p>Represents an object that contains entries and targets for <code>HomeDirectoryMappings</code>.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>",
      "members": {
        "Entry": {
          "documentation": "<p>Represents an entry for <code>HomeDirectoryMappings</code>.</p>",
          "shape": "MapEntry"
        },
        "Target": {
          "documentation": "<p>Represents the map target that is used in a <code>HomeDirectorymapEntry</code>.</p>",
          "shape": "MapTarget"
        }
      },
      "required": ["Entry", "Target"],
      "type": "structure"
    },
    "HomeDirectoryMappings": {
      "max": 50,
      "member": { "shape": "HomeDirectoryMapEntry" },
      "min": 1,
      "type": "list"
    },
    "HomeDirectoryType": {
      "enum": ["PATH", "LOGICAL"],
      "type": "string"
    },
    "HostKey": {
      "max": 4096,
      "sensitive": true,
      "type": "string"
    },
    "HostKeyFingerprint": { "type": "string" },
    "IdentityProviderDetails": {
      "documentation": "<p>Returns information related to the type of user authentication that is in use for a file transfer protocol-enabled server's users. A server can have only one method of authentication.</p>",
      "members": {
        "DirectoryId": {
          "documentation": "<p>The identifier of the Amazon Web Services Directory Service directory that you want to stop sharing.</p>",
          "shape": "DirectoryId"
        },
        "Function": {
          "documentation": "<p>The ARN for a lambda function to use for the Identity provider.</p>",
          "shape": "Function"
        },
        "InvocationRole": {
          "documentation": "<p>Provides the type of <code>InvocationRole</code> used to authenticate the user account.</p>",
          "shape": "Role"
        },
        "Url": {
          "documentation": "<p>Provides the location of the service endpoint used to authenticate users.</p>",
          "shape": "Url"
        }
      },
      "type": "structure"
    },
    "IdentityProviderType": {
      "documentation": "<p>Returns information related to the type of user authentication that is in use for a file transfer protocol-enabled server's users. For <code>AWS_DIRECTORY_SERVICE</code> or <code>SERVICE_MANAGED</code> authentication, the Secure Shell (SSH) public keys are stored with a user on the server instance. For <code>API_GATEWAY</code> authentication, your custom authentication method is implemented by using an API call. The server can have only one method of authentication.</p>",
      "enum": ["SERVICE_MANAGED", "API_GATEWAY", "AWS_DIRECTORY_SERVICE", "AWS_LAMBDA"],
      "type": "string"
    },
    "ImportSshPublicKeyRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server.</p>",
          "shape": "ServerId"
        },
        "SshPublicKeyBody": {
          "documentation": "<p>The public key portion of an SSH key pair.</p>",
          "shape": "SshPublicKeyBody"
        },
        "UserName": {
          "documentation": "<p>The name of the user account that is assigned to one or more servers.</p>",
          "shape": "UserName"
        }
      },
      "required": ["ServerId", "SshPublicKeyBody", "UserName"],
      "type": "structure"
    },
    "ImportSshPublicKeyResponse": {
      "documentation": "<p>Identifies the user, the server they belong to, and the identifier of the SSH public key associated with that user. A user can have more than one key on each server that they are associated with.</p>",
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server.</p>",
          "shape": "ServerId"
        },
        "SshPublicKeyId": {
          "documentation": "<p>The name given to a public key by the system that was imported.</p>",
          "shape": "SshPublicKeyId"
        },
        "UserName": {
          "documentation": "<p>A user name assigned to the <code>ServerID</code> value that you specified.</p>",
          "shape": "UserName"
        }
      },
      "required": ["ServerId", "SshPublicKeyId", "UserName"],
      "type": "structure"
    },
    "InputFileLocation": {
      "documentation": "<p>Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.</p>",
      "members": {
        "EfsFileLocation": {
          "documentation": "<p>Reserved for future use.</p>",
          "shape": "EfsFileLocation"
        },
        "S3FileLocation": {
          "documentation": "<p>Specifies the details for the S3 file being copied.</p>",
          "shape": "S3InputFileLocation"
        }
      },
      "type": "structure"
    },
    "InternalServiceError": {
      "documentation": "<p>This exception is thrown when an error occurs in the Amazon Web ServicesTransfer Family service.</p>",
      "exception": true,
      "fault": true,
      "members": {
        "Message": { "shape": "Message" }
      },
      "required": ["Message"],
      "type": "structure"
    },
    "InvalidNextTokenException": {
      "documentation": "<p>The <code>NextToken</code> parameter that was passed is invalid.</p>",
      "exception": true,
      "members": {
        "Message": { "shape": "Message" }
      },
      "required": ["Message"],
      "type": "structure"
    },
    "InvalidRequestException": {
      "documentation": "<p>This exception is thrown when the client submits a malformed request.</p>",
      "exception": true,
      "members": {
        "Message": { "shape": "Message" }
      },
      "required": ["Message"],
      "type": "structure"
    },
    "ListAccessesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Specifies the maximum number of access SIDs to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>When you can get additional results from the <code>ListAccesses</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional accesses.</p>",
          "shape": "NextToken"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that has users assigned to it.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "ListAccessesResponse": {
      "members": {
        "Accesses": {
          "documentation": "<p>Returns the accesses and their properties for the <code>ServerId</code> value that you specify.</p>",
          "shape": "ListedAccesses"
        },
        "NextToken": {
          "documentation": "<p>When you can get additional results from the <code>ListAccesses</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional accesses.</p>",
          "shape": "NextToken"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that has users assigned to it.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId", "Accesses"],
      "type": "structure"
    },
    "ListExecutionsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Specifies the aximum number of executions to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p> <code>ListExecutions</code> returns the <code>NextToken</code> parameter in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional executions.</p> <p> This is useful for pagination, for instance. If you have 100 executions for a workflow, you might only want to list first 10. If so, callthe API by specifing the <code>max-results</code>: </p> <p> <code>aws transfer list-executions --max-results 10</code> </p> <p> This returns details for the first 10 executions, as well as the pointer (<code>NextToken</code>) to the eleventh execution. You can now call the API again, suppling the <code>NextToken</code> value you received: </p> <p> <code>aws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult</code> </p> <p> This call returns the next 10 executions, the 11th through the 20th. You can then repeat the call until the details for all 100 executions have been returned. </p>",
          "shape": "NextToken"
        },
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["WorkflowId"],
      "type": "structure"
    },
    "ListExecutionsResponse": {
      "members": {
        "Executions": {
          "documentation": "<p>Returns the details for each execution.</p> <ul> <li> <p> <b>NextToken</b>: returned from a call to several APIs, you can use pass it to a subsequent command to continue listing additional executions.</p> </li> <li> <p> <b>StartTime</b>: timestamp indicating when the execution began.</p> </li> <li> <p> <b>Executions</b>: details of the execution, including the execution ID, initial file location, and Service metadata.</p> </li> <li> <p> <b>Status</b>: one of the following values: <code>IN_PROGRESS</code>, <code>COMPLETED</code>, <code>EXCEPTION</code>, <code>HANDLING_EXEPTION</code>. </p> </li> </ul>",
          "shape": "ListedExecutions"
        },
        "NextToken": {
          "documentation": "<p> <code>ListExecutions</code> returns the <code>NextToken</code> parameter in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional executions.</p>",
          "shape": "NextToken"
        },
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["WorkflowId", "Executions"],
      "type": "structure"
    },
    "ListSecurityPoliciesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Specifies the number of security policies to return as a response to the <code>ListSecurityPolicies</code> query.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>When additional results are obtained from the <code>ListSecurityPolicies</code> command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional security policies.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListSecurityPoliciesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>When you can get additional results from the <code>ListSecurityPolicies</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing security policies.</p>",
          "shape": "NextToken"
        },
        "SecurityPolicyNames": {
          "documentation": "<p>An array of security policies that were listed.</p>",
          "shape": "SecurityPolicyNames"
        }
      },
      "required": ["SecurityPolicyNames"],
      "type": "structure"
    },
    "ListServersRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Specifies the number of servers to return as a response to the <code>ListServers</code> query.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>When additional results are obtained from the <code>ListServers</code> command, a <code>NextToken</code> parameter is returned in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional servers.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListServersResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>When you can get additional results from the <code>ListServers</code> operation, a <code>NextToken</code> parameter is returned in the output. In a following command, you can pass in the <code>NextToken</code> parameter to continue listing additional servers.</p>",
          "shape": "NextToken"
        },
        "Servers": {
          "documentation": "<p>An array of servers that were listed.</p>",
          "shape": "ListedServers"
        }
      },
      "required": ["Servers"],
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "Arn": {
          "documentation": "<p>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific Amazon Web Services resource, such as a server, user, or role.</p>",
          "shape": "Arn"
        },
        "MaxResults": {
          "documentation": "<p>Specifies the number of tags to return as a response to the <code>ListTagsForResource</code> request.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>When you request additional results from the <code>ListTagsForResource</code> operation, a <code>NextToken</code> parameter is returned in the input. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional tags.</p>",
          "shape": "NextToken"
        }
      },
      "required": ["Arn"],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The ARN you specified to list the tags of.</p>",
          "shape": "Arn"
        },
        "NextToken": {
          "documentation": "<p>When you can get additional results from the <code>ListTagsForResource</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional tags.</p>",
          "shape": "NextToken"
        },
        "Tags": {
          "documentation": "<p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "ListUsersRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Specifies the number of users to return as a response to the <code>ListUsers</code> request.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional users.</p>",
          "shape": "NextToken"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that has users assigned to it.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "ListUsersResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code> parameter is returned in the output. You can then pass in a subsequent command to the <code>NextToken</code> parameter to continue listing additional users.</p>",
          "shape": "NextToken"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that the users are assigned to.</p>",
          "shape": "ServerId"
        },
        "Users": {
          "documentation": "<p>Returns the user accounts and their properties for the <code>ServerId</code> value that you specify.</p>",
          "shape": "ListedUsers"
        }
      },
      "required": ["ServerId", "Users"],
      "type": "structure"
    },
    "ListWorkflowsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Specifies the maximum number of workflows to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p> <code>ListWorkflows</code> returns the <code>NextToken</code> parameter in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional workflows.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListWorkflowsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p> <code>ListWorkflows</code> returns the <code>NextToken</code> parameter in the output. You can then pass the <code>NextToken</code> parameter in a subsequent command to continue listing additional workflows.</p>",
          "shape": "NextToken"
        },
        "Workflows": {
          "documentation": "<p>Returns the <code>Arn</code>, <code>WorkflowId</code>, and <code>Description</code> for each workflow.</p>",
          "shape": "ListedWorkflows"
        }
      },
      "required": ["Workflows"],
      "type": "structure"
    },
    "ListedAccess": {
      "documentation": "<p>Lists the properties for one or more specified associated accesses.</p>",
      "members": {
        "ExternalId": {
          "documentation": "<p>A unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code> </p> <p>In that command, replace <i>YourGroupName</i> with the name of your Active Directory group.</p> <p>The regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-</p>",
          "shape": "ExternalId"
        },
        "HomeDirectory": {
          "documentation": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>",
          "shape": "HomeDirectory"
        },
        "HomeDirectoryType": {
          "documentation": "<p>The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or EFS paths visible to your users.</p>",
          "shape": "HomeDirectoryType"
        },
        "Role": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.</p>",
          "shape": "Role"
        }
      },
      "type": "structure"
    },
    "ListedAccesses": {
      "member": { "shape": "ListedAccess" },
      "type": "list"
    },
    "ListedExecution": {
      "documentation": "<p>Returns properties of the execution that is specified.</p>",
      "members": {
        "ExecutionId": {
          "documentation": "<p>A unique identifier for the execution of a workflow.</p>",
          "shape": "ExecutionId"
        },
        "InitialFileLocation": {
          "documentation": "<p>A structure that describes the Amazon S3 or EFS file location. This is the file location when the execution begins: if the file is being copied, this is the initial (as opposed to destination) file location.</p>",
          "shape": "FileLocation"
        },
        "ServiceMetadata": {
          "documentation": "<p>A container object for the session details associated with a workflow.</p>",
          "shape": "ServiceMetadata"
        },
        "Status": {
          "documentation": "<p>The status is one of the execution. Can be in progress, completed, exception encountered, or handling the exception.</p>",
          "shape": "ExecutionStatus"
        }
      },
      "type": "structure"
    },
    "ListedExecutions": {
      "member": { "shape": "ListedExecution" },
      "type": "list"
    },
    "ListedServer": {
      "documentation": "<p>Returns properties of a file transfer protocol-enabled server that was specified.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>Specifies the unique Amazon Resource Name (ARN) for a server to be listed.</p>",
          "shape": "Arn"
        },
        "Domain": {
          "documentation": "<p>Specifies the domain of the storage system that is used for file transfers.</p>",
          "shape": "Domain"
        },
        "EndpointType": {
          "documentation": "<p>Specifies the type of VPC endpoint that your server is connected to. If your server is connected to a VPC endpoint, your server isn't accessible over the public internet.</p>",
          "shape": "EndpointType"
        },
        "IdentityProviderType": {
          "documentation": "<p>Specifies the mode of authentication for a server. The default value is <code>SERVICE_MANAGED</code>, which allows you to store and access user credentials within the Amazon Web Services Transfer Family service.</p> <p>Use <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory groups in Amazon Web Services Managed Active Directory or Microsoft Active Directory in your on-premises environment or in Amazon Web Services using AD Connectors. This option also requires you to provide a Directory ID using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use the <code>API_GATEWAY</code> value to integrate with an identity provider of your choosing. The <code>API_GATEWAY</code> setting requires you to provide an API Gateway endpoint URL to call for authentication using the <code>IdentityProviderDetails</code> parameter.</p> <p>Use the <code>AWS_LAMBDA</code> value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the <code>Function</code> parameter for the <code>IdentityProviderDetails</code> data type.</p>",
          "shape": "IdentityProviderType"
        },
        "LoggingRole": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.</p>",
          "shape": "Role"
        },
        "ServerId": {
          "documentation": "<p>Specifies the unique system assigned identifier for the servers that were listed.</p>",
          "shape": "ServerId"
        },
        "State": {
          "documentation": "<p>Specifies the condition of a server for the server that was described. A value of <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file transfer operations.</p> <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error condition.</p>",
          "shape": "State"
        },
        "UserCount": {
          "documentation": "<p>Specifies the number of users that are assigned to a server you specified with the <code>ServerId</code>.</p>",
          "shape": "UserCount"
        }
      },
      "required": ["Arn"],
      "type": "structure"
    },
    "ListedServers": {
      "member": { "shape": "ListedServer" },
      "type": "list"
    },
    "ListedUser": {
      "documentation": "<p>Returns properties of the user that you specify.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>Provides the unique Amazon Resource Name (ARN) for the user that you want to learn about.</p>",
          "shape": "Arn"
        },
        "HomeDirectory": {
          "documentation": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>",
          "shape": "HomeDirectory"
        },
        "HomeDirectoryType": {
          "documentation": "<p>The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or EFS paths visible to your users.</p>",
          "shape": "HomeDirectoryType"
        },
        "Role": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.</p> <note> <p>The IAM role that controls your users' access to your Amazon S3 bucket for servers with <code>Domain=S3</code>, or your EFS file system for servers with <code>Domain=EFS</code>. </p> <p>The policies attached to this role determine the level of access you want to provide your users when transferring files into and out of your S3 buckets or EFS file systems.</p> </note>",
          "shape": "Role"
        },
        "SshPublicKeyCount": {
          "documentation": "<p>Specifies the number of SSH public keys stored for the user you specified.</p>",
          "shape": "SshPublicKeyCount"
        },
        "UserName": {
          "documentation": "<p>Specifies the name of the user whose ARN was specified. User names are used for authentication purposes.</p>",
          "shape": "UserName"
        }
      },
      "required": ["Arn"],
      "type": "structure"
    },
    "ListedUsers": {
      "member": { "shape": "ListedUser" },
      "type": "list"
    },
    "ListedWorkflow": {
      "documentation": "<p>Contains the ID, text description, and Amazon Resource Name (ARN) for the workflow.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>Specifies the unique Amazon Resource Name (ARN) for the workflow.</p>",
          "shape": "Arn"
        },
        "Description": {
          "documentation": "<p>Specifies the text description for the workflow.</p>",
          "shape": "WorkflowDescription"
        },
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "type": "structure"
    },
    "ListedWorkflows": {
      "member": { "shape": "ListedWorkflow" },
      "type": "list"
    },
    "LogGroupName": {
      "max": 512,
      "min": 1,
      "pattern": "[\\.\\-_/#A-Za-z0-9]*",
      "type": "string"
    },
    "LoggingConfiguration": {
      "documentation": "<p>Consists of the logging role and the log group name.</p>",
      "members": {
        "LogGroupName": {
          "documentation": "<p>The name of the CloudWatch logging group for the Amazon Web Services Transfer server to which this workflow belongs.</p>",
          "shape": "LogGroupName"
        },
        "LoggingRole": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.</p>",
          "shape": "Role"
        }
      },
      "type": "structure"
    },
    "MapEntry": {
      "max": 1024,
      "pattern": "^/.*",
      "type": "string"
    },
    "MapTarget": {
      "max": 1024,
      "pattern": "^/.*",
      "type": "string"
    },
    "MaxResults": {
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "Message": { "type": "string" },
    "NextToken": {
      "max": 6144,
      "min": 1,
      "type": "string"
    },
    "NullableRole": {
      "max": 2048,
      "pattern": "^$|arn:.*role/.*",
      "type": "string"
    },
    "OnUploadWorkflowDetails": {
      "max": 1,
      "member": { "shape": "WorkflowDetail" },
      "type": "list"
    },
    "OverwriteExisting": {
      "enum": ["TRUE", "FALSE"],
      "type": "string"
    },
    "PassiveIp": {
      "max": 15,
      "type": "string"
    },
    "Policy": {
      "max": 2048,
      "type": "string"
    },
    "PosixId": {
      "max": 4294967295,
      "min": 0,
      "type": "long"
    },
    "PosixProfile": {
      "documentation": "<p>The full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users' access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.</p>",
      "members": {
        "Gid": {
          "documentation": "<p>The POSIX group ID used for all EFS operations by this user.</p>",
          "shape": "PosixId"
        },
        "SecondaryGids": {
          "documentation": "<p>The secondary POSIX group IDs used for all EFS operations by this user.</p>",
          "shape": "SecondaryGids"
        },
        "Uid": {
          "documentation": "<p>The POSIX user ID used for all EFS operations by this user.</p>",
          "shape": "PosixId"
        }
      },
      "required": ["Uid", "Gid"],
      "type": "structure"
    },
    "PostAuthenticationLoginBanner": {
      "max": 512,
      "pattern": "[\\x09-\\x0D\\x20-\\x7E]*",
      "type": "string"
    },
    "PreAuthenticationLoginBanner": {
      "max": 512,
      "pattern": "[\\x09-\\x0D\\x20-\\x7E]*",
      "type": "string"
    },
    "Protocol": {
      "enum": ["SFTP", "FTP", "FTPS"],
      "type": "string"
    },
    "ProtocolDetails": {
      "documentation": "<p> The protocol settings that are configured for your server. </p>",
      "members": {
        "PassiveIp": {
          "documentation": "<p> Indicates passive mode, for FTP and FTPS protocols. Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer. For example: </p> <p> <code> aws transfer update-server --protocol-details PassiveIp=<i>0.0.0.0</i> </code> </p> <p>Replace <code> <i>0.0.0.0</i> </code> in the example above with the actual IP address you want to use.</p> <note> <p> If you change the <code>PassiveIp</code> value, you must stop and then restart your Transfer server for the change to take effect. For details on using Passive IP (PASV) in a NAT environment, see <a href=\"http://aws.amazon.com/blogs/storage/configuring-your-ftps-server-behind-a-firewall-or-nat-with-aws-transfer-family/\">Configuring your FTPS server behind a firewall or NAT with Amazon Web Services Transfer Family</a>. </p> </note>",
          "shape": "PassiveIp"
        },
        "SetStatOption": {
          "documentation": "<p>Use the <code>SetStatOption</code> to ignore the error that is generated when the client attempts to use SETSTAT on a file you are uploading to an S3 bucket.</p> <p>Some SFTP file transfer clients can attempt to change the attributes of remote files, including timestamp and permissions, using commands, such as SETSTAT when uploading the file. However, these commands are not compatible with object storage systems, such as Amazon S3. Due to this incompatibility, file uploads from these clients can result in errors even when the file is otherwise successfully uploaded.</p> <p>Set the value to <code>ENABLE_NO_OP</code> to have the Transfer Family server ignore the SETSTAT command, and upload files without needing to make any changes to your SFTP client. While the <code>SetStatOption</code> <code>ENABLE_NO_OP</code> setting ignores the error, it does generate a log entry in CloudWatch Logs, so you can determine when the client is making a SETSTAT call.</p> <note> <p>If you want to preserve the original timestamp for your file, and modify other file attributes using SETSTAT, you can use Amazon EFS as backend storage with Transfer Family.</p> </note>",
          "shape": "SetStatOption"
        },
        "TlsSessionResumptionMode": {
          "documentation": "<p>A property used with Transfer servers that use the FTPS protocol. TLS Session Resumption provides a mechanism to resume or share a negotiated secret key between the control and data connection for an FTPS session. <code>TlsSessionResumptionMode</code> determines whether or not the server resumes recent, negotiated sessions through a unique session ID. This property is available during <code>CreateServer</code> and <code>UpdateServer</code> calls. If a <code>TlsSessionResumptionMode</code> value is not specified during CreateServer, it is set to <code>ENFORCED</code> by default.</p> <ul> <li> <p> <code>DISABLED</code>: the server does not process TLS session resumption client requests and creates a new TLS session for each request. </p> </li> <li> <p> <code>ENABLED</code>: the server processes and accepts clients that are performing TLS session resumption. The server doesn't reject client data connections that do not perform the TLS session resumption client processing.</p> </li> <li> <p> <code>ENFORCED</code>: the server processes and accepts clients that are performing TLS session resumption. The server rejects client data connections that do not perform the TLS session resumption client processing. Before you set the value to <code>ENFORCED</code>, test your clients.</p> <note> <p>Not all FTPS clients perform TLS session resumption. So, if you choose to enforce TLS session resumption, you prevent any connections from FTPS clients that don't perform the protocol negotiation. To determine whether or not you can use the <code>ENFORCED</code> value, you need to test your clients.</p> </note> </li> </ul>",
          "shape": "TlsSessionResumptionMode"
        }
      },
      "type": "structure"
    },
    "Protocols": {
      "max": 3,
      "member": { "shape": "Protocol" },
      "min": 1,
      "type": "list"
    },
    "Resource": { "type": "string" },
    "ResourceExistsException": {
      "documentation": "<p>The requested resource does not exist.</p>",
      "exception": true,
      "members": {
        "Message": { "shape": "Message" },
        "Resource": { "shape": "Resource" },
        "ResourceType": { "shape": "ResourceType" }
      },
      "required": ["Message", "Resource", "ResourceType"],
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>This exception is thrown when a resource is not found by the Amazon Web ServicesTransfer Family service.</p>",
      "exception": true,
      "members": {
        "Message": { "shape": "Message" },
        "Resource": { "shape": "Resource" },
        "ResourceType": { "shape": "ResourceType" }
      },
      "required": ["Message", "Resource", "ResourceType"],
      "type": "structure"
    },
    "ResourceType": { "type": "string" },
    "Response": { "type": "string" },
    "RetryAfterSeconds": { "type": "string" },
    "Role": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:.*role/.*",
      "type": "string"
    },
    "S3Bucket": {
      "max": 63,
      "min": 3,
      "pattern": "^[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$",
      "type": "string"
    },
    "S3Etag": {
      "max": 65536,
      "min": 1,
      "pattern": "^.+$",
      "type": "string"
    },
    "S3FileLocation": {
      "documentation": "<p>Specifies the details for the file location for the file being used in the workflow. Only applicable if you are using S3 storage.</p>",
      "members": {
        "Bucket": {
          "documentation": "<p>Specifies the S3 bucket that contains the file being used.</p>",
          "shape": "S3Bucket"
        },
        "Etag": {
          "documentation": "<p>The entity tag is a hash of the object. The ETag reflects changes only to the contents of an object, not its metadata.</p>",
          "shape": "S3Etag"
        },
        "Key": {
          "documentation": "<p>The name assigned to the file when it was created in S3. You use the object key to retrieve the object.</p>",
          "shape": "S3Key"
        },
        "VersionId": {
          "documentation": "<p>Specifies the file version.</p>",
          "shape": "S3VersionId"
        }
      },
      "type": "structure"
    },
    "S3InputFileLocation": {
      "documentation": "<p>Specifies the customer input S3 file location. If it is used inside <code>copyStepDetails.DestinationFileLocation</code>, it should be the S3 copy destination.</p> <p> You need to provide the bucket and key. The key can represent either a path or a file. This is determined by whether or not you end the key value with the forward slash (/) character. If the final character is \"/\", then your file is copied to the folder, and its name does not change. If, rather, the final character is alphanumeric, your uploaded file is renamed to the path value. In this case, if a file with that name already exists, it is overwritten. </p> <p>For example, if your path is <code>shared-files/bob/</code>, your uploaded files are copied to the <code>shared-files/bob/</code>, folder. If your path is <code>shared-files/today</code>, each uploaded file is copied to the <code>shared-files</code> folder and named <code>today</code>: each upload overwrites the previous version of the <i>bob</i> file.</p>",
      "members": {
        "Bucket": {
          "documentation": "<p>Specifies the S3 bucket for the customer input file.</p>",
          "shape": "S3Bucket"
        },
        "Key": {
          "documentation": "<p>The name assigned to the file when it was created in S3. You use the object key to retrieve the object.</p>",
          "shape": "S3Key"
        }
      },
      "type": "structure"
    },
    "S3Key": {
      "max": 1024,
      "pattern": "[\\P{M}\\p{M}]*",
      "type": "string"
    },
    "S3Tag": {
      "documentation": "<p>Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.</p>",
      "members": {
        "Key": {
          "documentation": "<p>The name assigned to the tag that you create.</p>",
          "shape": "S3TagKey"
        },
        "Value": {
          "documentation": "<p>The value that corresponds to the key.</p>",
          "shape": "S3TagValue"
        }
      },
      "required": ["Key", "Value"],
      "type": "structure"
    },
    "S3TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "S3TagValue": {
      "max": 256,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "S3Tags": {
      "max": 10,
      "member": { "shape": "S3Tag" },
      "min": 1,
      "type": "list"
    },
    "S3VersionId": {
      "max": 1024,
      "min": 1,
      "pattern": "^.+$",
      "type": "string"
    },
    "SecondaryGids": {
      "max": 16,
      "member": { "shape": "PosixId" },
      "min": 0,
      "type": "list"
    },
    "SecurityGroupId": {
      "max": 20,
      "min": 11,
      "pattern": "^sg-[0-9a-f]{8,17}$",
      "type": "string"
    },
    "SecurityGroupIds": {
      "member": { "shape": "SecurityGroupId" },
      "type": "list"
    },
    "SecurityPolicyName": {
      "max": 100,
      "pattern": "TransferSecurityPolicy-.+",
      "type": "string"
    },
    "SecurityPolicyNames": {
      "member": { "shape": "SecurityPolicyName" },
      "type": "list"
    },
    "SecurityPolicyOption": {
      "max": 50,
      "type": "string"
    },
    "SecurityPolicyOptions": {
      "member": { "shape": "SecurityPolicyOption" },
      "type": "list"
    },
    "SendWorkflowStepStateRequest": {
      "members": {
        "ExecutionId": {
          "documentation": "<p>A unique identifier for the execution of a workflow.</p>",
          "shape": "ExecutionId"
        },
        "Status": {
          "documentation": "<p>Indicates whether the specified step succeeded or failed.</p>",
          "shape": "CustomStepStatus"
        },
        "Token": {
          "documentation": "<p>Used to distinguish between multiple callbacks for multiple Lambda steps within the same execution.</p>",
          "shape": "CallbackToken"
        },
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["WorkflowId", "ExecutionId", "Token", "Status"],
      "type": "structure"
    },
    "SendWorkflowStepStateResponse": {
      "members": {},
      "type": "structure"
    },
    "ServerId": {
      "max": 19,
      "min": 19,
      "pattern": "^s-([0-9a-f]{17})$",
      "type": "string"
    },
    "ServiceErrorMessage": { "type": "string" },
    "ServiceMetadata": {
      "documentation": "<p>A container object for the session details associated with a workflow.</p>",
      "members": {
        "UserDetails": {
          "documentation": "<p>The Server ID (<code>ServerId</code>), Session ID (<code>SessionId</code>) and user (<code>UserName</code>) make up the <code>UserDetails</code>.</p>",
          "shape": "UserDetails"
        }
      },
      "required": ["UserDetails"],
      "type": "structure"
    },
    "ServiceUnavailableException": {
      "documentation": "<p>The request has failed because the Amazon Web ServicesTransfer Family service is not available.</p>",
      "exception": true,
      "fault": true,
      "members": {
        "Message": { "shape": "ServiceErrorMessage" }
      },
      "synthetic": true,
      "type": "structure"
    },
    "SessionId": {
      "max": 32,
      "min": 3,
      "pattern": "^[\\w-]*$",
      "type": "string"
    },
    "SetStatOption": {
      "enum": ["DEFAULT", "ENABLE_NO_OP"],
      "type": "string"
    },
    "SourceFileLocation": {
      "max": 256,
      "pattern": "^\\$\\{(\\w+.)+\\w+\\}$",
      "type": "string"
    },
    "SourceIp": {
      "max": 32,
      "pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$",
      "type": "string"
    },
    "SshPublicKey": {
      "documentation": "<p>Provides information about the public Secure Shell (SSH) key that is associated with a user account for the specific file transfer protocol-enabled server (as identified by <code>ServerId</code>). The information returned includes the date the key was imported, the public key contents, and the public key ID. A user can store more than one SSH public key associated with their user name on a specific server.</p>",
      "members": {
        "DateImported": {
          "documentation": "<p>Specifies the date that the public key was added to the user account.</p>",
          "shape": "DateImported"
        },
        "SshPublicKeyBody": {
          "documentation": "<p>Specifies the content of the SSH public key as specified by the <code>PublicKeyId</code>.</p>",
          "shape": "SshPublicKeyBody"
        },
        "SshPublicKeyId": {
          "documentation": "<p>Specifies the <code>SshPublicKeyId</code> parameter contains the identifier of the public key.</p>",
          "shape": "SshPublicKeyId"
        }
      },
      "required": ["DateImported", "SshPublicKeyBody", "SshPublicKeyId"],
      "type": "structure"
    },
    "SshPublicKeyBody": {
      "max": 2048,
      "pattern": "^ssh-rsa\\s+[A-Za-z0-9+/]+[=]{0,3}(\\s+.+)?\\s*$",
      "type": "string"
    },
    "SshPublicKeyCount": { "type": "integer" },
    "SshPublicKeyId": {
      "max": 21,
      "min": 21,
      "pattern": "^key-[0-9a-f]{17}$",
      "type": "string"
    },
    "SshPublicKeys": {
      "max": 5,
      "member": { "shape": "SshPublicKey" },
      "type": "list"
    },
    "StartServerRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that you start.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "State": {
      "documentation": "<p>Describes the condition of a file transfer protocol-enabled server with respect to its ability to perform file operations. There are six possible states: <code>OFFLINE</code>, <code>ONLINE</code>, <code>STARTING</code>, <code>STOPPING</code>, <code>START_FAILED</code>, and <code>STOP_FAILED</code>.</p> <p> <code>OFFLINE</code> indicates that the server exists, but that it is not available for file operations. <code>ONLINE</code> indicates that the server is available to perform file operations. <code>STARTING</code> indicates that the server's was instantiated, but the server is not yet available to perform file operations. Under normal conditions, it can take a couple of minutes for the server to be completely operational. Both <code>START_FAILED</code> and <code>STOP_FAILED</code> are error conditions.</p>",
      "enum": ["OFFLINE", "ONLINE", "STARTING", "STOPPING", "START_FAILED", "STOP_FAILED"],
      "type": "string"
    },
    "StatusCode": { "type": "integer" },
    "StepResultOutputsJson": {
      "max": 65536,
      "type": "string"
    },
    "StopServerRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that you stopped.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "SubnetId": { "type": "string" },
    "SubnetIds": {
      "member": { "shape": "SubnetId" },
      "type": "list"
    },
    "Tag": {
      "documentation": "<p>Creates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called <code>Group</code> and assign the values <code>Research</code> and <code>Accounting</code> to that group.</p>",
      "members": {
        "Key": {
          "documentation": "<p>The name assigned to the tag that you create.</p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p>Contains one or more values that you assigned to the key name you create.</p>",
          "shape": "TagValue"
        }
      },
      "required": ["Key", "Value"],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "type": "string"
    },
    "TagKeys": {
      "max": 50,
      "member": { "shape": "TagKey" },
      "min": 1,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "Arn": {
          "documentation": "<p>An Amazon Resource Name (ARN) for a specific Amazon Web Services resource, such as a server, user, or role.</p>",
          "shape": "Arn"
        },
        "Tags": {
          "documentation": "<p>Key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.</p>",
          "shape": "Tags"
        }
      },
      "required": ["Arn", "Tags"],
      "type": "structure"
    },
    "TagStepDetails": {
      "documentation": "<p>Each step type has its own <code>StepDetails</code> structure.</p> <p>The key/value pairs used to tag a file during the execution of a workflow step.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the step, used as an identifier.</p>",
          "shape": "WorkflowStepName"
        },
        "SourceFileLocation": {
          "documentation": "<p>Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow.</p> <ul> <li> <p>Enter <code>${previous.file}</code> to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value.</p> </li> <li> <p>Enter <code>${original.file}</code> to use the originally-uploaded file location as input for this step.</p> </li> </ul>",
          "shape": "SourceFileLocation"
        },
        "Tags": {
          "documentation": "<p>Array that contains from 1 to 10 key/value pairs.</p>",
          "shape": "S3Tags"
        }
      },
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "type": "string"
    },
    "Tags": {
      "max": 50,
      "member": { "shape": "Tag" },
      "min": 1,
      "type": "list"
    },
    "TestIdentityProviderRequest": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p>",
          "shape": "ServerId"
        },
        "ServerProtocol": {
          "documentation": "<p>The type of file transfer protocol to be tested.</p> <p>The available protocols are:</p> <ul> <li> <p>Secure Shell (SSH) File Transfer Protocol (SFTP)</p> </li> <li> <p>File Transfer Protocol Secure (FTPS)</p> </li> <li> <p>File Transfer Protocol (FTP)</p> </li> </ul>",
          "shape": "Protocol"
        },
        "SourceIp": {
          "documentation": "<p>The source IP address of the user account to be tested.</p>",
          "shape": "SourceIp"
        },
        "UserName": {
          "documentation": "<p>The name of the user account to be tested.</p>",
          "shape": "UserName"
        },
        "UserPassword": {
          "documentation": "<p>The password of the user account to be tested.</p>",
          "shape": "UserPassword"
        }
      },
      "required": ["ServerId", "UserName"],
      "type": "structure"
    },
    "TestIdentityProviderResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message that indicates whether the test was successful or not.</p> <note> <p>If an empty string is returned, the most likely cause is that the authentication failed due to an incorrect username or password.</p> </note>",
          "shape": "Message"
        },
        "Response": {
          "documentation": "<p>The response that is returned from your API Gateway.</p>",
          "shape": "Response"
        },
        "StatusCode": {
          "documentation": "<p>The HTTP status code that is the response from your API Gateway.</p>",
          "shape": "StatusCode"
        },
        "Url": {
          "documentation": "<p>The endpoint of the service used to authenticate a user.</p>",
          "shape": "Url"
        }
      },
      "required": ["StatusCode", "Url"],
      "type": "structure"
    },
    "ThrottlingException": {
      "documentation": "<p>The request was denied due to request throttling.</p> <p> HTTP Status Code: 400</p>",
      "exception": true,
      "members": {
        "RetryAfterSeconds": { "shape": "RetryAfterSeconds" }
      },
      "type": "structure"
    },
    "TlsSessionResumptionMode": {
      "enum": ["DISABLED", "ENABLED", "ENFORCED"],
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "Arn": {
          "documentation": "<p>The value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific Amazon Web Services resource, such as a server, user, or role.</p>",
          "shape": "Arn"
        },
        "TagKeys": {
          "documentation": "<p>TagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.</p>",
          "shape": "TagKeys"
        }
      },
      "required": ["Arn", "TagKeys"],
      "type": "structure"
    },
    "UpdateAccessRequest": {
      "members": {
        "ExternalId": {
          "documentation": "<p>A unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.</p> <p> <code>Get-ADGroup -Filter {samAccountName -like \"<i>YourGroupName</i>*\"} -Properties * | Select SamAccountName,ObjectSid</code> </p> <p>In that command, replace <i>YourGroupName</i> with the name of your Active Directory group.</p> <p>The regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-</p>",
          "shape": "ExternalId"
        },
        "HomeDirectory": {
          "documentation": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>",
          "shape": "HomeDirectory"
        },
        "HomeDirectoryMappings": {
          "documentation": "<p>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in <code>Target</code>. This value can only be set when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases, you can use this value instead of the session policy to lock down your user to the designated home directory (\"<code>chroot</code>\"). To do this, you can set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the <code>HomeDirectory</code> parameter value.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>",
          "shape": "HomeDirectoryMappings"
        },
        "HomeDirectoryType": {
          "documentation": "<p>The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or EFS paths visible to your users.</p>",
          "shape": "HomeDirectoryType"
        },
        "Policy": {
          "documentation": "<p>A session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p> <note> <p>This only applies when the domain of <code>ServerId</code> is S3. EFS does not use session policies.</p> <p>For session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p> <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html\">Example session policy</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\">AssumeRole</a> in the <i>Amazon Web ServicesSecurity Token Service API Reference</i>.</p> </note>",
          "shape": "Policy"
        },
        "PosixProfile": { "shape": "PosixProfile" },
        "Role": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.</p>",
          "shape": "Role"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server instance. This is the specific server that you added your user to.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId", "ExternalId"],
      "type": "structure"
    },
    "UpdateAccessResponse": {
      "members": {
        "ExternalId": {
          "documentation": "<p>The external ID of the group whose users have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web ServicesTransfer Family.</p>",
          "shape": "ExternalId"
        },
        "ServerId": {
          "documentation": "<p>The ID of the server that the user is attached to.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId", "ExternalId"],
      "type": "structure"
    },
    "UpdateServerRequest": {
      "members": {
        "Certificate": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate Manager (ACM) certificate. Required when <code>Protocols</code> is set to <code>FTPS</code>.</p> <p>To request a new public certificate, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html\">Request a public certificate</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.</p> <p>To import an existing certificate into ACM, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html\">Importing certificates into ACM</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.</p> <p>To request a private certificate to use FTPS through private IP addresses, see <a href=\"https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html\">Request a private certificate</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.</p> <p>Certificates with the following cryptographic algorithms and key sizes are supported:</p> <ul> <li> <p>2048-bit RSA (RSA_2048)</p> </li> <li> <p>4096-bit RSA (RSA_4096)</p> </li> <li> <p>Elliptic Prime Curve 256 bit (EC_prime256v1)</p> </li> <li> <p>Elliptic Prime Curve 384 bit (EC_secp384r1)</p> </li> <li> <p>Elliptic Prime Curve 521 bit (EC_secp521r1)</p> </li> </ul> <note> <p>The certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP address specified and information about the issuer.</p> </note>",
          "shape": "Certificate"
        },
        "EndpointDetails": {
          "documentation": "<p>The virtual private cloud (VPC) endpoint settings that are configured for your server. When you host your endpoint within your VPC, you can make it accessible only to resources within your VPC, or you can attach Elastic IP addresses and make it accessible to clients over the internet. Your VPC's default security groups are automatically assigned to your endpoint.</p>",
          "shape": "EndpointDetails"
        },
        "EndpointType": {
          "documentation": "<p>The type of endpoint that you want your server to use. You can choose to make your server's endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an endpoint that is hosted in a VPC, you can restrict access to your server and resources only within your VPC or choose to make it internet facing by attaching Elastic IP addresses directly to it.</p> <note> <p> After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Servicesaccount if your account hasn't already done so before May 19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Servicesaccount on or before May 19, 2021, you will not be affected. After this date, use <code>EndpointType</code>=<code>VPC</code>.</p> <p>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p> <p>It is recommended that you use <code>VPC</code> as the <code>EndpointType</code>. With this endpoint type, you have the option to directly associate up to three Elastic IPv4 addresses (BYO IP included) with your server's endpoint and use VPC security groups to restrict traffic by the client's public IP address. This is not possible with <code>EndpointType</code> set to <code>VPC_ENDPOINT</code>.</p> </note>",
          "shape": "EndpointType"
        },
        "HostKey": {
          "documentation": "<p>The RSA private key as generated by <code>ssh-keygen -N \"\" -m PEM -f my-new-server-key</code>.</p> <important> <p>If you aren't planning to migrate existing users from an existing server to a new server, don't update the host key. Accidentally changing a server's host key can be disruptive.</p> </important> <p>For more information, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/edit-server-config.html#configuring-servers-change-host-key\">Change the host key for your SFTP-enabled server</a> in the <i>Amazon Web ServicesTransfer Family User Guide</i>.</p>",
          "shape": "HostKey"
        },
        "IdentityProviderDetails": {
          "documentation": "<p>An array containing all of the information required to call a customer's authentication API method.</p>",
          "shape": "IdentityProviderDetails"
        },
        "LoggingRole": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.</p>",
          "shape": "NullableRole"
        },
        "PostAuthenticationLoginBanner": {
          "documentation": "<p>Specify a string to display when users connect to a server. This string is displayed after the user authenticates.</p> <note> <p>The SFTP protocol does not support post-authentication display banners.</p> </note>",
          "shape": "PostAuthenticationLoginBanner"
        },
        "PreAuthenticationLoginBanner": {
          "documentation": "<p>Specify a string to display when users connect to a server. This string is displayed before the user authenticates. For example, the following banner displays details about using the system.</p> <p> <code>This system is for the use of authorized users only. Individuals using this computer system without authority, or in excess of their authority, are subject to having all of their activities on this system monitored and recorded by system personnel.</code> </p>",
          "shape": "PreAuthenticationLoginBanner"
        },
        "ProtocolDetails": {
          "documentation": "<p>The protocol settings that are configured for your server.</p> <ul> <li> <p> Use the <code>PassiveIp</code> parameter to indicate passive mode (for FTP and FTPS protocols). Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer. </p> </li> <li> <p>Use the <code>SetStatOption</code> to ignore the error that is generated when the client attempts to use SETSTAT on a file you are uploading to an S3 bucket. Set the value to <code>ENABLE_NO_OP</code> to have the Transfer Family server ignore the SETSTAT command, and upload files without needing to make any changes to your SFTP client. Note that with <code>SetStatOption</code> set to <code>ENABLE_NO_OP</code>, Transfer generates a log entry to CloudWatch Logs, so you can determine when the client is making a SETSTAT call.</p> </li> <li> <p>Use the <code>TlsSessionResumptionMode</code> parameter to determine whether or not your Transfer server resumes recent, negotiated sessions through a unique session ID.</p> </li> </ul>",
          "shape": "ProtocolDetails"
        },
        "Protocols": {
          "documentation": "<p>Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. The available protocols are:</p> <ul> <li> <p>Secure Shell (SSH) File Transfer Protocol (SFTP): File transfer over SSH</p> </li> <li> <p>File Transfer Protocol Secure (FTPS): File transfer with TLS encryption</p> </li> <li> <p>File Transfer Protocol (FTP): Unencrypted file transfer</p> </li> </ul> <note> <p>If you select <code>FTPS</code>, you must choose a certificate stored in Amazon Web ServicesCertificate Manager (ACM) which will be used to identify your server when clients connect to it over FTPS.</p> <p>If <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>, then the <code>EndpointType</code> must be <code>VPC</code> and the <code>IdentityProviderType</code> must be <code>AWS_DIRECTORY_SERVICE</code> or <code>API_GATEWAY</code>.</p> <p>If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code> cannot be associated.</p> <p>If <code>Protocol</code> is set only to <code>SFTP</code>, the <code>EndpointType</code> can be set to <code>PUBLIC</code> and the <code>IdentityProviderType</code> can be set to <code>SERVICE_MANAGED</code>.</p> </note>",
          "shape": "Protocols"
        },
        "SecurityPolicyName": {
          "documentation": "<p>Specifies the name of the security policy that is attached to the server.</p>",
          "shape": "SecurityPolicyName"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server instance that the user account is assigned to.</p>",
          "shape": "ServerId"
        },
        "WorkflowDetails": {
          "documentation": "<p>Specifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.</p> <p>To remove an associated workflow from a server, you can provide an empty <code>OnUpload</code> object, as in the following example.</p> <p> <code>aws transfer update-server --server-id s-01234567890abcdef --workflow-details '{\"OnUpload\":[]}'</code> </p>",
          "shape": "WorkflowDetails"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "UpdateServerResponse": {
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server that the user account is assigned to.</p>",
          "shape": "ServerId"
        }
      },
      "required": ["ServerId"],
      "type": "structure"
    },
    "UpdateUserRequest": {
      "members": {
        "HomeDirectory": {
          "documentation": "<p>The landing directory (folder) for a user when they log in to the server using the client.</p> <p>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</p>",
          "shape": "HomeDirectory"
        },
        "HomeDirectoryMappings": {
          "documentation": "<p>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in <code>Target</code>. This value can only be set when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example.</p> <p> <code>[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p> <p>In most cases, you can use this value instead of the session policy to lock down your user to the designated home directory (\"<code>chroot</code>\"). To do this, you can set <code>Entry</code> to '/' and set <code>Target</code> to the HomeDirectory parameter value.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[ { \"Entry\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]</code> </p>",
          "shape": "HomeDirectoryMappings"
        },
        "HomeDirectoryType": {
          "documentation": "<p>The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to make Amazon S3 or EFS paths visible to your users.</p>",
          "shape": "HomeDirectoryType"
        },
        "Policy": {
          "documentation": "<p>A session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>, <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</p> <note> <p>This only applies when the domain of <code>ServerId</code> is S3. EFS does not use session policies.</p> <p>For session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the <code>Policy</code> argument.</p> <p>For an example of a session policy, see <a href=\"https://docs.aws.amazon.com/transfer/latest/userguide/session-policy\">Creating a session policy</a>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\">AssumeRole</a> in the <i>Amazon Web Services Security Token Service API Reference</i>.</p> </note>",
          "shape": "Policy"
        },
        "PosixProfile": {
          "documentation": "<p>Specifies the full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users' access to your Amazon Elastic File Systems (Amazon EFS). The POSIX permissions that are set on files and directories in your file system determines the level of access your users get when transferring files into and out of your Amazon EFS file systems.</p>",
          "shape": "PosixProfile"
        },
        "Role": {
          "documentation": "<p>Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.</p>",
          "shape": "Role"
        },
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server instance that the user account is assigned to.</p>",
          "shape": "ServerId"
        },
        "UserName": {
          "documentation": "<p>A unique string that identifies a user and is associated with a server as specified by the <code>ServerId</code>. This user name must be a minimum of 3 and a maximum of 100 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period '.', and at sign '@'. The user name can't start with a hyphen, period, or at sign.</p>",
          "shape": "UserName"
        }
      },
      "required": ["ServerId", "UserName"],
      "type": "structure"
    },
    "UpdateUserResponse": {
      "documentation": "<p> <code>UpdateUserResponse</code> returns the user name and identifier for the request to update a user's properties.</p>",
      "members": {
        "ServerId": {
          "documentation": "<p>A system-assigned unique identifier for a server instance that the user account is assigned to.</p>",
          "shape": "ServerId"
        },
        "UserName": {
          "documentation": "<p>The unique identifier for a user that is assigned to a server instance that was specified in the request.</p>",
          "shape": "UserName"
        }
      },
      "required": ["ServerId", "UserName"],
      "type": "structure"
    },
    "Url": {
      "max": 255,
      "type": "string"
    },
    "UserCount": { "type": "integer" },
    "UserDetails": {
      "documentation": "<p>Specifies the user name, server ID, and session ID for a workflow.</p>",
      "members": {
        "ServerId": {
          "documentation": "<p>The system-assigned unique identifier for a Transfer server instance. </p>",
          "shape": "ServerId"
        },
        "SessionId": {
          "documentation": "<p>The system-assigned unique identifier for a session that corresponds to the workflow.</p>",
          "shape": "SessionId"
        },
        "UserName": {
          "documentation": "<p>A unique string that identifies a user account associated with a server.</p>",
          "shape": "UserName"
        }
      },
      "required": ["UserName", "ServerId"],
      "type": "structure"
    },
    "UserName": {
      "max": 100,
      "min": 3,
      "pattern": "^[\\w][\\w@.-]{2,99}$",
      "type": "string"
    },
    "UserPassword": {
      "max": 1024,
      "sensitive": true,
      "type": "string"
    },
    "VpcEndpointId": {
      "max": 22,
      "min": 22,
      "pattern": "^vpce-[0-9a-f]{17}$",
      "type": "string"
    },
    "VpcId": { "type": "string" },
    "WorkflowDescription": {
      "max": 256,
      "pattern": "^[\\w- ]*$",
      "type": "string"
    },
    "WorkflowDetail": {
      "documentation": "<p>Specifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.</p>",
      "members": {
        "ExecutionRole": {
          "documentation": "<p>Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources</p>",
          "shape": "Role"
        },
        "WorkflowId": {
          "documentation": "<p>A unique identifier for the workflow.</p>",
          "shape": "WorkflowId"
        }
      },
      "required": ["WorkflowId", "ExecutionRole"],
      "type": "structure"
    },
    "WorkflowDetails": {
      "documentation": "<p>Container for the <code>WorkflowDetail</code> data type. It is used by actions that trigger a workflow to begin execution.</p>",
      "members": {
        "OnUpload": {
          "documentation": "<p>A trigger that starts a workflow: the workflow begins to execute after a file is uploaded.</p> <p>To remove an associated workflow from a server, you can provide an empty <code>OnUpload</code> object, as in the following example.</p> <p> <code>aws transfer update-server --server-id s-01234567890abcdef --workflow-details '{\"OnUpload\":[]}'</code> </p>",
          "shape": "OnUploadWorkflowDetails"
        }
      },
      "required": ["OnUpload"],
      "type": "structure"
    },
    "WorkflowId": {
      "max": 19,
      "min": 19,
      "pattern": "^w-([a-z0-9]{17})$",
      "type": "string"
    },
    "WorkflowStep": {
      "documentation": "<p>The basic building block of a workflow.</p>",
      "members": {
        "CopyStepDetails": {
          "documentation": "<p>Details for a step that performs a file copy.</p> <p> Consists of the following values: </p> <ul> <li> <p>A description</p> </li> <li> <p>An S3 location for the destination of the file copy.</p> </li> <li> <p>A flag that indicates whether or not to overwrite an existing file of the same name. The default is <code>FALSE</code>.</p> </li> </ul>",
          "shape": "CopyStepDetails"
        },
        "CustomStepDetails": {
          "documentation": "<p>Details for a step that invokes a lambda function.</p> <p> Consists of the lambda function name, target, and timeout (in seconds). </p>",
          "shape": "CustomStepDetails"
        },
        "DeleteStepDetails": {
          "documentation": "<p>Details for a step that deletes the file.</p>",
          "shape": "DeleteStepDetails"
        },
        "TagStepDetails": {
          "documentation": "<p>Details for a step that creates one or more tags.</p> <p>You specify one or more tags: each tag contains a key/value pair.</p>",
          "shape": "TagStepDetails"
        },
        "Type": {
          "documentation": "<p> Currently, the following step types are supported. </p> <ul> <li> <p> <i>COPY</i>: copy the file to another location</p> </li> <li> <p> <i>CUSTOM</i>: custom step with a lambda target</p> </li> <li> <p> <i>DELETE</i>: delete the file</p> </li> <li> <p> <i>TAG</i>: add a tag to the file</p> </li> </ul>",
          "shape": "WorkflowStepType"
        }
      },
      "type": "structure"
    },
    "WorkflowStepName": {
      "max": 30,
      "pattern": "^[\\w-]*$",
      "type": "string"
    },
    "WorkflowStepType": {
      "enum": ["COPY", "CUSTOM", "TAG", "DELETE"],
      "type": "string"
    },
    "WorkflowSteps": {
      "max": 8,
      "member": { "shape": "WorkflowStep" },
      "type": "list"
    }
  },
  "version": "2.0"
}
